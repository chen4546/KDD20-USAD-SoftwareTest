/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 11.0, "minX": 0.0, "maxY": 2201.0, "series": [{"data": [[0.0, 16.0], [0.1, 16.0], [0.2, 17.0], [0.3, 17.0], [0.4, 100.0], [0.5, 101.0], [0.6, 102.0], [0.7, 103.0], [0.8, 105.0], [0.9, 105.0], [1.0, 107.0], [1.1, 112.0], [1.2, 185.0], [1.3, 190.0], [1.4, 191.0], [1.5, 192.0], [1.6, 192.0], [1.7, 192.0], [1.8, 193.0], [1.9, 196.0], [2.0, 196.0], [2.1, 196.0], [2.2, 196.0], [2.3, 196.0], [2.4, 197.0], [2.5, 197.0], [2.6, 197.0], [2.7, 197.0], [2.8, 198.0], [2.9, 198.0], [3.0, 199.0], [3.1, 200.0], [3.2, 200.0], [3.3, 200.0], [3.4, 200.0], [3.5, 200.0], [3.6, 200.0], [3.7, 201.0], [3.8, 201.0], [3.9, 201.0], [4.0, 201.0], [4.1, 207.0], [4.2, 207.0], [4.3, 211.0], [4.4, 211.0], [4.5, 281.0], [4.6, 281.0], [4.7, 281.0], [4.8, 281.0], [4.9, 282.0], [5.0, 282.0], [5.1, 282.0], [5.2, 286.0], [5.3, 289.0], [5.4, 292.0], [5.5, 292.0], [5.6, 292.0], [5.7, 293.0], [5.8, 293.0], [5.9, 293.0], [6.0, 293.0], [6.1, 293.0], [6.2, 294.0], [6.3, 294.0], [6.4, 295.0], [6.5, 295.0], [6.6, 295.0], [6.7, 295.0], [6.8, 295.0], [6.9, 295.0], [7.0, 295.0], [7.1, 295.0], [7.2, 295.0], [7.3, 296.0], [7.4, 296.0], [7.5, 297.0], [7.6, 297.0], [7.7, 298.0], [7.8, 298.0], [7.9, 298.0], [8.0, 298.0], [8.1, 298.0], [8.2, 298.0], [8.3, 298.0], [8.4, 298.0], [8.5, 299.0], [8.6, 299.0], [8.7, 299.0], [8.8, 299.0], [8.9, 299.0], [9.0, 300.0], [9.1, 301.0], [9.2, 301.0], [9.3, 301.0], [9.4, 301.0], [9.5, 301.0], [9.6, 304.0], [9.7, 306.0], [9.8, 308.0], [9.9, 308.0], [10.0, 321.0], [10.1, 321.0], [10.2, 321.0], [10.3, 327.0], [10.4, 377.0], [10.5, 380.0], [10.6, 380.0], [10.7, 381.0], [10.8, 381.0], [10.9, 381.0], [11.0, 383.0], [11.1, 385.0], [11.2, 385.0], [11.3, 385.0], [11.4, 387.0], [11.5, 387.0], [11.6, 388.0], [11.7, 388.0], [11.8, 388.0], [11.9, 388.0], [12.0, 388.0], [12.1, 388.0], [12.2, 388.0], [12.3, 388.0], [12.4, 389.0], [12.5, 389.0], [12.6, 389.0], [12.7, 389.0], [12.8, 389.0], [12.9, 389.0], [13.0, 389.0], [13.1, 389.0], [13.2, 390.0], [13.3, 390.0], [13.4, 390.0], [13.5, 390.0], [13.6, 390.0], [13.7, 390.0], [13.8, 390.0], [13.9, 390.0], [14.0, 390.0], [14.1, 390.0], [14.2, 390.0], [14.3, 390.0], [14.4, 390.0], [14.5, 390.0], [14.6, 390.0], [14.7, 390.0], [14.8, 390.0], [14.9, 390.0], [15.0, 391.0], [15.1, 391.0], [15.2, 391.0], [15.3, 391.0], [15.4, 391.0], [15.5, 391.0], [15.6, 391.0], [15.7, 391.0], [15.8, 391.0], [15.9, 391.0], [16.0, 391.0], [16.1, 391.0], [16.2, 391.0], [16.3, 391.0], [16.4, 391.0], [16.5, 392.0], [16.6, 392.0], [16.7, 392.0], [16.8, 392.0], [16.9, 392.0], [17.0, 392.0], [17.1, 392.0], [17.2, 392.0], [17.3, 392.0], [17.4, 392.0], [17.5, 392.0], [17.6, 392.0], [17.7, 392.0], [17.8, 392.0], [17.9, 392.0], [18.0, 392.0], [18.1, 392.0], [18.2, 392.0], [18.3, 392.0], [18.4, 392.0], [18.5, 393.0], [18.6, 393.0], [18.7, 393.0], [18.8, 393.0], [18.9, 393.0], [19.0, 393.0], [19.1, 393.0], [19.2, 393.0], [19.3, 393.0], [19.4, 393.0], [19.5, 393.0], [19.6, 393.0], [19.7, 393.0], [19.8, 393.0], [19.9, 393.0], [20.0, 393.0], [20.1, 393.0], [20.2, 393.0], [20.3, 393.0], [20.4, 393.0], [20.5, 393.0], [20.6, 393.0], [20.7, 393.0], [20.8, 394.0], [20.9, 394.0], [21.0, 394.0], [21.1, 394.0], [21.2, 394.0], [21.3, 394.0], [21.4, 394.0], [21.5, 394.0], [21.6, 395.0], [21.7, 395.0], [21.8, 395.0], [21.9, 395.0], [22.0, 395.0], [22.1, 395.0], [22.2, 395.0], [22.3, 395.0], [22.4, 395.0], [22.5, 395.0], [22.6, 395.0], [22.7, 395.0], [22.8, 395.0], [22.9, 395.0], [23.0, 396.0], [23.1, 396.0], [23.2, 396.0], [23.3, 397.0], [23.4, 397.0], [23.5, 397.0], [23.6, 397.0], [23.7, 397.0], [23.8, 397.0], [23.9, 398.0], [24.0, 398.0], [24.1, 399.0], [24.2, 399.0], [24.3, 399.0], [24.4, 400.0], [24.5, 400.0], [24.6, 400.0], [24.7, 400.0], [24.8, 400.0], [24.9, 400.0], [25.0, 401.0], [25.1, 401.0], [25.2, 401.0], [25.3, 402.0], [25.4, 402.0], [25.5, 402.0], [25.6, 402.0], [25.7, 402.0], [25.8, 403.0], [25.9, 403.0], [26.0, 405.0], [26.1, 405.0], [26.2, 405.0], [26.3, 405.0], [26.4, 405.0], [26.5, 405.0], [26.6, 405.0], [26.7, 405.0], [26.8, 406.0], [26.9, 408.0], [27.0, 409.0], [27.1, 409.0], [27.2, 412.0], [27.3, 412.0], [27.4, 474.0], [27.5, 474.0], [27.6, 474.0], [27.7, 474.0], [27.8, 479.0], [27.9, 481.0], [28.0, 481.0], [28.1, 484.0], [28.2, 484.0], [28.3, 484.0], [28.4, 484.0], [28.5, 485.0], [28.6, 485.0], [28.7, 486.0], [28.8, 487.0], [28.9, 487.0], [29.0, 487.0], [29.1, 487.0], [29.2, 487.0], [29.3, 487.0], [29.4, 487.0], [29.5, 487.0], [29.6, 487.0], [29.7, 487.0], [29.8, 487.0], [29.9, 487.0], [30.0, 487.0], [30.1, 487.0], [30.2, 487.0], [30.3, 487.0], [30.4, 487.0], [30.5, 487.0], [30.6, 487.0], [30.7, 488.0], [30.8, 488.0], [30.9, 488.0], [31.0, 488.0], [31.1, 488.0], [31.2, 488.0], [31.3, 488.0], [31.4, 488.0], [31.5, 488.0], [31.6, 488.0], [31.7, 488.0], [31.8, 488.0], [31.9, 488.0], [32.0, 488.0], [32.1, 488.0], [32.2, 489.0], [32.3, 489.0], [32.4, 489.0], [32.5, 489.0], [32.6, 489.0], [32.7, 489.0], [32.8, 489.0], [32.9, 489.0], [33.0, 489.0], [33.1, 489.0], [33.2, 489.0], [33.3, 489.0], [33.4, 489.0], [33.5, 489.0], [33.6, 489.0], [33.7, 489.0], [33.8, 489.0], [33.9, 489.0], [34.0, 489.0], [34.1, 489.0], [34.2, 489.0], [34.3, 490.0], [34.4, 490.0], [34.5, 490.0], [34.6, 490.0], [34.7, 490.0], [34.8, 490.0], [34.9, 490.0], [35.0, 490.0], [35.1, 490.0], [35.2, 490.0], [35.3, 490.0], [35.4, 490.0], [35.5, 490.0], [35.6, 490.0], [35.7, 490.0], [35.8, 490.0], [35.9, 490.0], [36.0, 490.0], [36.1, 490.0], [36.2, 490.0], [36.3, 490.0], [36.4, 490.0], [36.5, 490.0], [36.6, 490.0], [36.7, 490.0], [36.8, 490.0], [36.9, 490.0], [37.0, 490.0], [37.1, 490.0], [37.2, 490.0], [37.3, 490.0], [37.4, 491.0], [37.5, 491.0], [37.6, 491.0], [37.7, 491.0], [37.8, 491.0], [37.9, 491.0], [38.0, 491.0], [38.1, 491.0], [38.2, 491.0], [38.3, 491.0], [38.4, 491.0], [38.5, 491.0], [38.6, 491.0], [38.7, 491.0], [38.8, 491.0], [38.9, 491.0], [39.0, 491.0], [39.1, 491.0], [39.2, 491.0], [39.3, 492.0], [39.4, 492.0], [39.5, 492.0], [39.6, 492.0], [39.7, 492.0], [39.8, 492.0], [39.9, 492.0], [40.0, 492.0], [40.1, 492.0], [40.2, 492.0], [40.3, 492.0], [40.4, 492.0], [40.5, 492.0], [40.6, 492.0], [40.7, 492.0], [40.8, 493.0], [40.9, 493.0], [41.0, 493.0], [41.1, 493.0], [41.2, 493.0], [41.3, 493.0], [41.4, 493.0], [41.5, 493.0], [41.6, 493.0], [41.7, 493.0], [41.8, 493.0], [41.9, 493.0], [42.0, 493.0], [42.1, 493.0], [42.2, 493.0], [42.3, 493.0], [42.4, 493.0], [42.5, 493.0], [42.6, 493.0], [42.7, 494.0], [42.8, 494.0], [42.9, 494.0], [43.0, 494.0], [43.1, 494.0], [43.2, 494.0], [43.3, 494.0], [43.4, 494.0], [43.5, 494.0], [43.6, 494.0], [43.7, 495.0], [43.8, 495.0], [43.9, 495.0], [44.0, 495.0], [44.1, 495.0], [44.2, 495.0], [44.3, 495.0], [44.4, 495.0], [44.5, 495.0], [44.6, 495.0], [44.7, 495.0], [44.8, 495.0], [44.9, 495.0], [45.0, 495.0], [45.1, 495.0], [45.2, 496.0], [45.3, 496.0], [45.4, 496.0], [45.5, 496.0], [45.6, 496.0], [45.7, 496.0], [45.8, 496.0], [45.9, 496.0], [46.0, 496.0], [46.1, 496.0], [46.2, 496.0], [46.3, 497.0], [46.4, 497.0], [46.5, 497.0], [46.6, 497.0], [46.7, 497.0], [46.8, 497.0], [46.9, 498.0], [47.0, 498.0], [47.1, 498.0], [47.2, 498.0], [47.3, 498.0], [47.4, 499.0], [47.5, 499.0], [47.6, 499.0], [47.7, 499.0], [47.8, 500.0], [47.9, 500.0], [48.0, 500.0], [48.1, 500.0], [48.2, 500.0], [48.3, 501.0], [48.4, 501.0], [48.5, 501.0], [48.6, 502.0], [48.7, 502.0], [48.8, 502.0], [48.9, 502.0], [49.0, 503.0], [49.1, 503.0], [49.2, 503.0], [49.3, 503.0], [49.4, 503.0], [49.5, 504.0], [49.6, 504.0], [49.7, 505.0], [49.8, 505.0], [49.9, 506.0], [50.0, 507.0], [50.1, 507.0], [50.2, 507.0], [50.3, 508.0], [50.4, 509.0], [50.5, 510.0], [50.6, 510.0], [50.7, 510.0], [50.8, 511.0], [50.9, 511.0], [51.0, 519.0], [51.1, 578.0], [51.2, 581.0], [51.3, 581.0], [51.4, 582.0], [51.5, 582.0], [51.6, 582.0], [51.7, 582.0], [51.8, 583.0], [51.9, 583.0], [52.0, 584.0], [52.1, 584.0], [52.2, 584.0], [52.3, 585.0], [52.4, 585.0], [52.5, 585.0], [52.6, 585.0], [52.7, 585.0], [52.8, 586.0], [52.9, 586.0], [53.0, 586.0], [53.1, 586.0], [53.2, 586.0], [53.3, 586.0], [53.4, 586.0], [53.5, 586.0], [53.6, 586.0], [53.7, 587.0], [53.8, 587.0], [53.9, 587.0], [54.0, 587.0], [54.1, 587.0], [54.2, 587.0], [54.3, 587.0], [54.4, 587.0], [54.5, 588.0], [54.6, 588.0], [54.7, 588.0], [54.8, 588.0], [54.9, 588.0], [55.0, 588.0], [55.1, 588.0], [55.2, 588.0], [55.3, 588.0], [55.4, 588.0], [55.5, 588.0], [55.6, 588.0], [55.7, 588.0], [55.8, 588.0], [55.9, 588.0], [56.0, 588.0], [56.1, 588.0], [56.2, 589.0], [56.3, 589.0], [56.4, 589.0], [56.5, 589.0], [56.6, 589.0], [56.7, 589.0], [56.8, 589.0], [56.9, 589.0], [57.0, 589.0], [57.1, 589.0], [57.2, 589.0], [57.3, 589.0], [57.4, 589.0], [57.5, 589.0], [57.6, 590.0], [57.7, 590.0], [57.8, 590.0], [57.9, 590.0], [58.0, 590.0], [58.1, 590.0], [58.2, 590.0], [58.3, 590.0], [58.4, 590.0], [58.5, 590.0], [58.6, 590.0], [58.7, 590.0], [58.8, 590.0], [58.9, 590.0], [59.0, 590.0], [59.1, 590.0], [59.2, 590.0], [59.3, 590.0], [59.4, 590.0], [59.5, 590.0], [59.6, 590.0], [59.7, 590.0], [59.8, 590.0], [59.9, 590.0], [60.0, 590.0], [60.1, 590.0], [60.2, 590.0], [60.3, 590.0], [60.4, 590.0], [60.5, 591.0], [60.6, 591.0], [60.7, 591.0], [60.8, 591.0], [60.9, 591.0], [61.0, 591.0], [61.1, 591.0], [61.2, 591.0], [61.3, 591.0], [61.4, 591.0], [61.5, 591.0], [61.6, 591.0], [61.7, 591.0], [61.8, 591.0], [61.9, 591.0], [62.0, 591.0], [62.1, 591.0], [62.2, 592.0], [62.3, 592.0], [62.4, 592.0], [62.5, 592.0], [62.6, 592.0], [62.7, 592.0], [62.8, 592.0], [62.9, 592.0], [63.0, 592.0], [63.1, 592.0], [63.2, 592.0], [63.3, 592.0], [63.4, 592.0], [63.5, 593.0], [63.6, 593.0], [63.7, 593.0], [63.8, 593.0], [63.9, 593.0], [64.0, 593.0], [64.1, 593.0], [64.2, 593.0], [64.3, 593.0], [64.4, 593.0], [64.5, 593.0], [64.6, 593.0], [64.7, 593.0], [64.8, 593.0], [64.9, 593.0], [65.0, 593.0], [65.1, 593.0], [65.2, 594.0], [65.3, 594.0], [65.4, 594.0], [65.5, 594.0], [65.6, 594.0], [65.7, 595.0], [65.8, 595.0], [65.9, 595.0], [66.0, 595.0], [66.1, 595.0], [66.2, 597.0], [66.3, 597.0], [66.4, 598.0], [66.5, 598.0], [66.6, 598.0], [66.7, 598.0], [66.8, 599.0], [66.9, 599.0], [67.0, 599.0], [67.1, 599.0], [67.2, 599.0], [67.3, 600.0], [67.4, 600.0], [67.5, 600.0], [67.6, 600.0], [67.7, 600.0], [67.8, 600.0], [67.9, 600.0], [68.0, 600.0], [68.1, 600.0], [68.2, 600.0], [68.3, 601.0], [68.4, 601.0], [68.5, 601.0], [68.6, 601.0], [68.7, 601.0], [68.8, 602.0], [68.9, 603.0], [69.0, 604.0], [69.1, 604.0], [69.2, 604.0], [69.3, 604.0], [69.4, 605.0], [69.5, 605.0], [69.6, 607.0], [69.7, 607.0], [69.8, 607.0], [69.9, 607.0], [70.0, 607.0], [70.1, 607.0], [70.2, 608.0], [70.3, 608.0], [70.4, 608.0], [70.5, 609.0], [70.6, 611.0], [70.7, 612.0], [70.8, 612.0], [70.9, 612.0], [71.0, 614.0], [71.1, 616.0], [71.2, 616.0], [71.3, 617.0], [71.4, 617.0], [71.5, 618.0], [71.6, 618.0], [71.7, 618.0], [71.8, 625.0], [71.9, 630.0], [72.0, 631.0], [72.1, 674.0], [72.2, 675.0], [72.3, 675.0], [72.4, 677.0], [72.5, 677.0], [72.6, 677.0], [72.7, 678.0], [72.8, 679.0], [72.9, 680.0], [73.0, 680.0], [73.1, 680.0], [73.2, 680.0], [73.3, 680.0], [73.4, 680.0], [73.5, 680.0], [73.6, 681.0], [73.7, 681.0], [73.8, 681.0], [73.9, 681.0], [74.0, 681.0], [74.1, 682.0], [74.2, 682.0], [74.3, 682.0], [74.4, 682.0], [74.5, 682.0], [74.6, 682.0], [74.7, 682.0], [74.8, 683.0], [74.9, 683.0], [75.0, 683.0], [75.1, 683.0], [75.2, 683.0], [75.3, 684.0], [75.4, 684.0], [75.5, 684.0], [75.6, 685.0], [75.7, 685.0], [75.8, 685.0], [75.9, 685.0], [76.0, 685.0], [76.1, 685.0], [76.2, 686.0], [76.3, 686.0], [76.4, 686.0], [76.5, 686.0], [76.6, 686.0], [76.7, 686.0], [76.8, 687.0], [76.9, 687.0], [77.0, 687.0], [77.1, 687.0], [77.2, 687.0], [77.3, 687.0], [77.4, 687.0], [77.5, 687.0], [77.6, 687.0], [77.7, 688.0], [77.8, 688.0], [77.9, 688.0], [78.0, 688.0], [78.1, 688.0], [78.2, 689.0], [78.3, 689.0], [78.4, 689.0], [78.5, 689.0], [78.6, 690.0], [78.7, 690.0], [78.8, 690.0], [78.9, 690.0], [79.0, 690.0], [79.1, 690.0], [79.2, 690.0], [79.3, 690.0], [79.4, 691.0], [79.5, 691.0], [79.6, 691.0], [79.7, 691.0], [79.8, 691.0], [79.9, 692.0], [80.0, 692.0], [80.1, 692.0], [80.2, 692.0], [80.3, 693.0], [80.4, 693.0], [80.5, 693.0], [80.6, 694.0], [80.7, 694.0], [80.8, 694.0], [80.9, 694.0], [81.0, 695.0], [81.1, 695.0], [81.2, 695.0], [81.3, 696.0], [81.4, 696.0], [81.5, 697.0], [81.6, 697.0], [81.7, 697.0], [81.8, 697.0], [81.9, 697.0], [82.0, 698.0], [82.1, 698.0], [82.2, 698.0], [82.3, 699.0], [82.4, 700.0], [82.5, 700.0], [82.6, 700.0], [82.7, 700.0], [82.8, 700.0], [82.9, 701.0], [83.0, 701.0], [83.1, 702.0], [83.2, 702.0], [83.3, 703.0], [83.4, 703.0], [83.5, 703.0], [83.6, 703.0], [83.7, 703.0], [83.8, 705.0], [83.9, 707.0], [84.0, 707.0], [84.1, 708.0], [84.2, 708.0], [84.3, 709.0], [84.4, 710.0], [84.5, 714.0], [84.6, 715.0], [84.7, 715.0], [84.8, 716.0], [84.9, 717.0], [85.0, 717.0], [85.1, 721.0], [85.2, 776.0], [85.3, 777.0], [85.4, 777.0], [85.5, 777.0], [85.6, 777.0], [85.7, 779.0], [85.8, 779.0], [85.9, 779.0], [86.0, 780.0], [86.1, 780.0], [86.2, 780.0], [86.3, 780.0], [86.4, 781.0], [86.5, 781.0], [86.6, 781.0], [86.7, 781.0], [86.8, 782.0], [86.9, 782.0], [87.0, 783.0], [87.1, 783.0], [87.2, 783.0], [87.3, 784.0], [87.4, 785.0], [87.5, 785.0], [87.6, 785.0], [87.7, 785.0], [87.8, 785.0], [87.9, 786.0], [88.0, 787.0], [88.1, 787.0], [88.2, 788.0], [88.3, 788.0], [88.4, 788.0], [88.5, 788.0], [88.6, 789.0], [88.7, 789.0], [88.8, 790.0], [88.9, 792.0], [89.0, 793.0], [89.1, 794.0], [89.2, 794.0], [89.3, 794.0], [89.4, 794.0], [89.5, 796.0], [89.6, 796.0], [89.7, 796.0], [89.8, 796.0], [89.9, 796.0], [90.0, 796.0], [90.1, 798.0], [90.2, 800.0], [90.3, 800.0], [90.4, 801.0], [90.5, 801.0], [90.6, 803.0], [90.7, 804.0], [90.8, 809.0], [90.9, 809.0], [91.0, 809.0], [91.1, 809.0], [91.2, 809.0], [91.3, 809.0], [91.4, 810.0], [91.5, 810.0], [91.6, 810.0], [91.7, 810.0], [91.8, 810.0], [91.9, 811.0], [92.0, 811.0], [92.1, 815.0], [92.2, 879.0], [92.3, 881.0], [92.4, 882.0], [92.5, 884.0], [92.6, 884.0], [92.7, 885.0], [92.8, 885.0], [92.9, 886.0], [93.0, 886.0], [93.1, 886.0], [93.2, 887.0], [93.3, 887.0], [93.4, 887.0], [93.5, 887.0], [93.6, 887.0], [93.7, 887.0], [93.8, 888.0], [93.9, 888.0], [94.0, 888.0], [94.1, 890.0], [94.2, 890.0], [94.3, 890.0], [94.4, 890.0], [94.5, 890.0], [94.6, 890.0], [94.7, 891.0], [94.8, 891.0], [94.9, 891.0], [95.0, 894.0], [95.1, 894.0], [95.2, 894.0], [95.3, 895.0], [95.4, 895.0], [95.5, 895.0], [95.6, 895.0], [95.7, 895.0], [95.8, 896.0], [95.9, 896.0], [96.0, 898.0], [96.1, 905.0], [96.2, 910.0], [96.3, 918.0], [96.4, 979.0], [96.5, 980.0], [96.6, 980.0], [96.7, 980.0], [96.8, 982.0], [96.9, 986.0], [97.0, 986.0], [97.1, 988.0], [97.2, 992.0], [97.3, 1002.0], [97.4, 1016.0], [97.5, 1094.0], [97.6, 1094.0], [97.7, 1094.0], [97.8, 1096.0], [97.9, 1098.0], [98.0, 1110.0], [98.1, 1120.0], [98.2, 1274.0], [98.3, 1311.0], [98.4, 1311.0], [98.5, 1318.0], [98.6, 1380.0], [98.7, 1387.0], [98.8, 1403.0], [98.9, 1430.0], [99.0, 1578.0], [99.1, 1581.0], [99.2, 1581.0], [99.3, 1582.0], [99.4, 1582.0], [99.5, 1674.0], [99.6, 1674.0], [99.7, 1677.0], [99.8, 1797.0], [99.9, 1991.0]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[0.0, 20.0], [0.1, 20.0], [0.2, 89.0], [0.3, 92.0], [0.4, 96.0], [0.5, 96.0], [0.6, 98.0], [0.7, 106.0], [0.8, 107.0], [0.9, 107.0], [1.0, 107.0], [1.1, 112.0], [1.2, 112.0], [1.3, 185.0], [1.4, 185.0], [1.5, 189.0], [1.6, 190.0], [1.7, 193.0], [1.8, 198.0], [1.9, 198.0], [2.0, 198.0], [2.1, 201.0], [2.2, 204.0], [2.3, 208.0], [2.4, 290.0], [2.5, 294.0], [2.6, 294.0], [2.7, 294.0], [2.8, 294.0], [2.9, 294.0], [3.0, 295.0], [3.1, 295.0], [3.2, 295.0], [3.3, 296.0], [3.4, 296.0], [3.5, 296.0], [3.6, 296.0], [3.7, 296.0], [3.8, 296.0], [3.9, 296.0], [4.0, 296.0], [4.1, 297.0], [4.2, 297.0], [4.3, 297.0], [4.4, 297.0], [4.5, 299.0], [4.6, 299.0], [4.7, 300.0], [4.8, 301.0], [4.9, 301.0], [5.0, 385.0], [5.1, 386.0], [5.2, 386.0], [5.3, 387.0], [5.4, 387.0], [5.5, 387.0], [5.6, 387.0], [5.7, 388.0], [5.8, 389.0], [5.9, 390.0], [6.0, 391.0], [6.1, 391.0], [6.2, 391.0], [6.3, 392.0], [6.4, 392.0], [6.5, 393.0], [6.6, 393.0], [6.7, 393.0], [6.8, 394.0], [6.9, 394.0], [7.0, 394.0], [7.1, 394.0], [7.2, 396.0], [7.3, 396.0], [7.4, 396.0], [7.5, 397.0], [7.6, 397.0], [7.7, 398.0], [7.8, 398.0], [7.9, 398.0], [8.0, 398.0], [8.1, 399.0], [8.2, 399.0], [8.3, 399.0], [8.4, 399.0], [8.5, 400.0], [8.6, 400.0], [8.7, 401.0], [8.8, 404.0], [8.9, 405.0], [9.0, 405.0], [9.1, 405.0], [9.2, 405.0], [9.3, 405.0], [9.4, 407.0], [9.5, 407.0], [9.6, 407.0], [9.7, 408.0], [9.8, 408.0], [9.9, 412.0], [10.0, 449.0], [10.1, 449.0], [10.2, 477.0], [10.3, 486.0], [10.4, 487.0], [10.5, 487.0], [10.6, 488.0], [10.7, 488.0], [10.8, 488.0], [10.9, 488.0], [11.0, 488.0], [11.1, 489.0], [11.2, 489.0], [11.3, 490.0], [11.4, 490.0], [11.5, 490.0], [11.6, 490.0], [11.7, 490.0], [11.8, 491.0], [11.9, 491.0], [12.0, 491.0], [12.1, 491.0], [12.2, 491.0], [12.3, 491.0], [12.4, 491.0], [12.5, 491.0], [12.6, 491.0], [12.7, 491.0], [12.8, 491.0], [12.9, 492.0], [13.0, 492.0], [13.1, 492.0], [13.2, 492.0], [13.3, 492.0], [13.4, 492.0], [13.5, 492.0], [13.6, 492.0], [13.7, 492.0], [13.8, 492.0], [13.9, 492.0], [14.0, 493.0], [14.1, 493.0], [14.2, 493.0], [14.3, 493.0], [14.4, 493.0], [14.5, 494.0], [14.6, 494.0], [14.7, 494.0], [14.8, 494.0], [14.9, 494.0], [15.0, 494.0], [15.1, 494.0], [15.2, 494.0], [15.3, 495.0], [15.4, 495.0], [15.5, 495.0], [15.6, 496.0], [15.7, 496.0], [15.8, 496.0], [15.9, 496.0], [16.0, 497.0], [16.1, 498.0], [16.2, 498.0], [16.3, 500.0], [16.4, 500.0], [16.5, 500.0], [16.6, 501.0], [16.7, 501.0], [16.8, 502.0], [16.9, 503.0], [17.0, 508.0], [17.1, 508.0], [17.2, 561.0], [17.3, 561.0], [17.4, 578.0], [17.5, 584.0], [17.6, 584.0], [17.7, 585.0], [17.8, 587.0], [17.9, 587.0], [18.0, 588.0], [18.1, 588.0], [18.2, 588.0], [18.3, 588.0], [18.4, 588.0], [18.5, 588.0], [18.6, 588.0], [18.7, 589.0], [18.8, 589.0], [18.9, 589.0], [19.0, 589.0], [19.1, 589.0], [19.2, 589.0], [19.3, 589.0], [19.4, 589.0], [19.5, 589.0], [19.6, 589.0], [19.7, 589.0], [19.8, 589.0], [19.9, 590.0], [20.0, 590.0], [20.1, 590.0], [20.2, 590.0], [20.3, 590.0], [20.4, 590.0], [20.5, 590.0], [20.6, 591.0], [20.7, 591.0], [20.8, 591.0], [20.9, 591.0], [21.0, 591.0], [21.1, 591.0], [21.2, 591.0], [21.3, 591.0], [21.4, 591.0], [21.5, 591.0], [21.6, 592.0], [21.7, 592.0], [21.8, 592.0], [21.9, 592.0], [22.0, 592.0], [22.1, 592.0], [22.2, 593.0], [22.3, 593.0], [22.4, 593.0], [22.5, 593.0], [22.6, 593.0], [22.7, 593.0], [22.8, 593.0], [22.9, 594.0], [23.0, 594.0], [23.1, 594.0], [23.2, 594.0], [23.3, 594.0], [23.4, 595.0], [23.5, 595.0], [23.6, 595.0], [23.7, 595.0], [23.8, 595.0], [23.9, 595.0], [24.0, 595.0], [24.1, 595.0], [24.2, 596.0], [24.3, 597.0], [24.4, 598.0], [24.5, 598.0], [24.6, 598.0], [24.7, 598.0], [24.8, 599.0], [24.9, 599.0], [25.0, 599.0], [25.1, 600.0], [25.2, 600.0], [25.3, 600.0], [25.4, 600.0], [25.5, 600.0], [25.6, 600.0], [25.7, 600.0], [25.8, 600.0], [25.9, 600.0], [26.0, 601.0], [26.1, 601.0], [26.2, 602.0], [26.3, 602.0], [26.4, 602.0], [26.5, 603.0], [26.6, 603.0], [26.7, 603.0], [26.8, 604.0], [26.9, 605.0], [27.0, 605.0], [27.1, 611.0], [27.2, 612.0], [27.3, 612.0], [27.4, 612.0], [27.5, 613.0], [27.6, 614.0], [27.7, 614.0], [27.8, 623.0], [27.9, 624.0], [28.0, 628.0], [28.1, 628.0], [28.2, 628.0], [28.3, 675.0], [28.4, 675.0], [28.5, 676.0], [28.6, 677.0], [28.7, 677.0], [28.8, 677.0], [28.9, 679.0], [29.0, 680.0], [29.1, 680.0], [29.2, 681.0], [29.3, 681.0], [29.4, 681.0], [29.5, 682.0], [29.6, 682.0], [29.7, 682.0], [29.8, 682.0], [29.9, 682.0], [30.0, 682.0], [30.1, 682.0], [30.2, 683.0], [30.3, 683.0], [30.4, 683.0], [30.5, 684.0], [30.6, 684.0], [30.7, 684.0], [30.8, 685.0], [30.9, 685.0], [31.0, 685.0], [31.1, 685.0], [31.2, 685.0], [31.3, 686.0], [31.4, 686.0], [31.5, 686.0], [31.6, 687.0], [31.7, 687.0], [31.8, 687.0], [31.9, 687.0], [32.0, 687.0], [32.1, 687.0], [32.2, 687.0], [32.3, 687.0], [32.4, 687.0], [32.5, 687.0], [32.6, 687.0], [32.7, 687.0], [32.8, 687.0], [32.9, 687.0], [33.0, 687.0], [33.1, 688.0], [33.2, 688.0], [33.3, 688.0], [33.4, 688.0], [33.5, 688.0], [33.6, 688.0], [33.7, 688.0], [33.8, 688.0], [33.9, 688.0], [34.0, 688.0], [34.1, 688.0], [34.2, 688.0], [34.3, 688.0], [34.4, 688.0], [34.5, 688.0], [34.6, 688.0], [34.7, 688.0], [34.8, 688.0], [34.9, 688.0], [35.0, 689.0], [35.1, 689.0], [35.2, 689.0], [35.3, 689.0], [35.4, 689.0], [35.5, 689.0], [35.6, 689.0], [35.7, 689.0], [35.8, 689.0], [35.9, 689.0], [36.0, 689.0], [36.1, 690.0], [36.2, 690.0], [36.3, 690.0], [36.4, 690.0], [36.5, 690.0], [36.6, 690.0], [36.7, 690.0], [36.8, 690.0], [36.9, 690.0], [37.0, 690.0], [37.1, 690.0], [37.2, 690.0], [37.3, 690.0], [37.4, 690.0], [37.5, 690.0], [37.6, 690.0], [37.7, 691.0], [37.8, 691.0], [37.9, 691.0], [38.0, 691.0], [38.1, 691.0], [38.2, 691.0], [38.3, 691.0], [38.4, 691.0], [38.5, 691.0], [38.6, 692.0], [38.7, 692.0], [38.8, 692.0], [38.9, 692.0], [39.0, 692.0], [39.1, 692.0], [39.2, 692.0], [39.3, 692.0], [39.4, 693.0], [39.5, 693.0], [39.6, 693.0], [39.7, 693.0], [39.8, 693.0], [39.9, 693.0], [40.0, 693.0], [40.1, 693.0], [40.2, 693.0], [40.3, 694.0], [40.4, 694.0], [40.5, 694.0], [40.6, 694.0], [40.7, 694.0], [40.8, 694.0], [40.9, 694.0], [41.0, 694.0], [41.1, 694.0], [41.2, 694.0], [41.3, 694.0], [41.4, 695.0], [41.5, 695.0], [41.6, 695.0], [41.7, 695.0], [41.8, 695.0], [41.9, 695.0], [42.0, 696.0], [42.1, 696.0], [42.2, 696.0], [42.3, 696.0], [42.4, 696.0], [42.5, 696.0], [42.6, 697.0], [42.7, 697.0], [42.8, 697.0], [42.9, 697.0], [43.0, 697.0], [43.1, 697.0], [43.2, 698.0], [43.3, 698.0], [43.4, 699.0], [43.5, 699.0], [43.6, 699.0], [43.7, 699.0], [43.8, 700.0], [43.9, 701.0], [44.0, 701.0], [44.1, 701.0], [44.2, 701.0], [44.3, 701.0], [44.4, 702.0], [44.5, 702.0], [44.6, 702.0], [44.7, 703.0], [44.8, 703.0], [44.9, 707.0], [45.0, 708.0], [45.1, 709.0], [45.2, 711.0], [45.3, 711.0], [45.4, 711.0], [45.5, 711.0], [45.6, 713.0], [45.7, 713.0], [45.8, 713.0], [45.9, 714.0], [46.0, 715.0], [46.1, 715.0], [46.2, 715.0], [46.3, 715.0], [46.4, 715.0], [46.5, 716.0], [46.6, 736.0], [46.7, 737.0], [46.8, 778.0], [46.9, 780.0], [47.0, 780.0], [47.1, 781.0], [47.2, 781.0], [47.3, 781.0], [47.4, 781.0], [47.5, 781.0], [47.6, 781.0], [47.7, 781.0], [47.8, 782.0], [47.9, 782.0], [48.0, 783.0], [48.1, 783.0], [48.2, 783.0], [48.3, 783.0], [48.4, 783.0], [48.5, 783.0], [48.6, 783.0], [48.7, 783.0], [48.8, 783.0], [48.9, 784.0], [49.0, 784.0], [49.1, 784.0], [49.2, 784.0], [49.3, 784.0], [49.4, 784.0], [49.5, 784.0], [49.6, 784.0], [49.7, 784.0], [49.8, 784.0], [49.9, 784.0], [50.0, 784.0], [50.1, 784.0], [50.2, 784.0], [50.3, 784.0], [50.4, 784.0], [50.5, 784.0], [50.6, 784.0], [50.7, 784.0], [50.8, 785.0], [50.9, 785.0], [51.0, 785.0], [51.1, 785.0], [51.2, 785.0], [51.3, 785.0], [51.4, 785.0], [51.5, 785.0], [51.6, 785.0], [51.7, 785.0], [51.8, 785.0], [51.9, 785.0], [52.0, 785.0], [52.1, 785.0], [52.2, 785.0], [52.3, 785.0], [52.4, 785.0], [52.5, 785.0], [52.6, 785.0], [52.7, 785.0], [52.8, 785.0], [52.9, 785.0], [53.0, 785.0], [53.1, 785.0], [53.2, 785.0], [53.3, 785.0], [53.4, 785.0], [53.5, 785.0], [53.6, 785.0], [53.7, 785.0], [53.8, 786.0], [53.9, 786.0], [54.0, 786.0], [54.1, 786.0], [54.2, 786.0], [54.3, 786.0], [54.4, 786.0], [54.5, 786.0], [54.6, 786.0], [54.7, 786.0], [54.8, 786.0], [54.9, 786.0], [55.0, 786.0], [55.1, 786.0], [55.2, 786.0], [55.3, 786.0], [55.4, 786.0], [55.5, 786.0], [55.6, 786.0], [55.7, 786.0], [55.8, 786.0], [55.9, 787.0], [56.0, 787.0], [56.1, 787.0], [56.2, 787.0], [56.3, 787.0], [56.4, 787.0], [56.5, 787.0], [56.6, 787.0], [56.7, 787.0], [56.8, 787.0], [56.9, 787.0], [57.0, 787.0], [57.1, 787.0], [57.2, 787.0], [57.3, 787.0], [57.4, 788.0], [57.5, 788.0], [57.6, 788.0], [57.7, 788.0], [57.8, 788.0], [57.9, 788.0], [58.0, 788.0], [58.1, 788.0], [58.2, 788.0], [58.3, 788.0], [58.4, 788.0], [58.5, 789.0], [58.6, 789.0], [58.7, 789.0], [58.8, 789.0], [58.9, 791.0], [59.0, 791.0], [59.1, 791.0], [59.2, 791.0], [59.3, 791.0], [59.4, 791.0], [59.5, 792.0], [59.6, 792.0], [59.7, 792.0], [59.8, 792.0], [59.9, 792.0], [60.0, 792.0], [60.1, 793.0], [60.2, 793.0], [60.3, 793.0], [60.4, 793.0], [60.5, 793.0], [60.6, 793.0], [60.7, 793.0], [60.8, 794.0], [60.9, 794.0], [61.0, 794.0], [61.1, 794.0], [61.2, 794.0], [61.3, 794.0], [61.4, 795.0], [61.5, 795.0], [61.6, 795.0], [61.7, 796.0], [61.8, 796.0], [61.9, 796.0], [62.0, 796.0], [62.1, 796.0], [62.2, 797.0], [62.3, 797.0], [62.4, 797.0], [62.5, 797.0], [62.6, 797.0], [62.7, 797.0], [62.8, 797.0], [62.9, 798.0], [63.0, 798.0], [63.1, 798.0], [63.2, 798.0], [63.3, 798.0], [63.4, 799.0], [63.5, 799.0], [63.6, 800.0], [63.7, 800.0], [63.8, 801.0], [63.9, 801.0], [64.0, 801.0], [64.1, 801.0], [64.2, 802.0], [64.3, 802.0], [64.4, 803.0], [64.5, 805.0], [64.6, 805.0], [64.7, 810.0], [64.8, 810.0], [64.9, 811.0], [65.0, 811.0], [65.1, 811.0], [65.2, 811.0], [65.3, 811.0], [65.4, 813.0], [65.5, 813.0], [65.6, 814.0], [65.7, 815.0], [65.8, 815.0], [65.9, 816.0], [66.0, 822.0], [66.1, 836.0], [66.2, 872.0], [66.3, 878.0], [66.4, 878.0], [66.5, 878.0], [66.6, 878.0], [66.7, 879.0], [66.8, 879.0], [66.9, 879.0], [67.0, 879.0], [67.1, 879.0], [67.2, 879.0], [67.3, 879.0], [67.4, 879.0], [67.5, 879.0], [67.6, 879.0], [67.7, 879.0], [67.8, 880.0], [67.9, 880.0], [68.0, 880.0], [68.1, 880.0], [68.2, 880.0], [68.3, 880.0], [68.4, 880.0], [68.5, 880.0], [68.6, 880.0], [68.7, 880.0], [68.8, 880.0], [68.9, 881.0], [69.0, 881.0], [69.1, 881.0], [69.2, 881.0], [69.3, 881.0], [69.4, 881.0], [69.5, 881.0], [69.6, 881.0], [69.7, 882.0], [69.8, 882.0], [69.9, 883.0], [70.0, 883.0], [70.1, 883.0], [70.2, 883.0], [70.3, 883.0], [70.4, 883.0], [70.5, 883.0], [70.6, 884.0], [70.7, 884.0], [70.8, 884.0], [70.9, 884.0], [71.0, 884.0], [71.1, 884.0], [71.2, 884.0], [71.3, 885.0], [71.4, 885.0], [71.5, 885.0], [71.6, 886.0], [71.7, 886.0], [71.8, 886.0], [71.9, 886.0], [72.0, 886.0], [72.1, 886.0], [72.2, 886.0], [72.3, 886.0], [72.4, 886.0], [72.5, 886.0], [72.6, 886.0], [72.7, 886.0], [72.8, 886.0], [72.9, 887.0], [73.0, 887.0], [73.1, 887.0], [73.2, 887.0], [73.3, 887.0], [73.4, 887.0], [73.5, 887.0], [73.6, 887.0], [73.7, 887.0], [73.8, 888.0], [73.9, 888.0], [74.0, 888.0], [74.1, 888.0], [74.2, 888.0], [74.3, 888.0], [74.4, 889.0], [74.5, 889.0], [74.6, 889.0], [74.7, 890.0], [74.8, 890.0], [74.9, 891.0], [75.0, 891.0], [75.1, 891.0], [75.2, 891.0], [75.3, 891.0], [75.4, 891.0], [75.5, 891.0], [75.6, 891.0], [75.7, 891.0], [75.8, 891.0], [75.9, 892.0], [76.0, 892.0], [76.1, 892.0], [76.2, 892.0], [76.3, 892.0], [76.4, 892.0], [76.5, 892.0], [76.6, 893.0], [76.7, 893.0], [76.8, 893.0], [76.9, 894.0], [77.0, 894.0], [77.1, 894.0], [77.2, 894.0], [77.3, 894.0], [77.4, 894.0], [77.5, 895.0], [77.6, 895.0], [77.7, 895.0], [77.8, 896.0], [77.9, 896.0], [78.0, 896.0], [78.1, 896.0], [78.2, 896.0], [78.3, 897.0], [78.4, 897.0], [78.5, 897.0], [78.6, 898.0], [78.7, 899.0], [78.8, 899.0], [78.9, 900.0], [79.0, 900.0], [79.1, 900.0], [79.2, 902.0], [79.3, 903.0], [79.4, 903.0], [79.5, 904.0], [79.6, 904.0], [79.7, 904.0], [79.8, 904.0], [79.9, 905.0], [80.0, 905.0], [80.1, 905.0], [80.2, 906.0], [80.3, 907.0], [80.4, 908.0], [80.5, 908.0], [80.6, 909.0], [80.7, 909.0], [80.8, 910.0], [80.9, 912.0], [81.0, 912.0], [81.1, 913.0], [81.2, 913.0], [81.3, 915.0], [81.4, 915.0], [81.5, 915.0], [81.6, 916.0], [81.7, 917.0], [81.8, 917.0], [81.9, 917.0], [82.0, 917.0], [82.1, 920.0], [82.2, 920.0], [82.3, 920.0], [82.4, 920.0], [82.5, 921.0], [82.6, 921.0], [82.7, 921.0], [82.8, 921.0], [82.9, 968.0], [83.0, 975.0], [83.1, 977.0], [83.2, 977.0], [83.3, 977.0], [83.4, 977.0], [83.5, 977.0], [83.6, 977.0], [83.7, 977.0], [83.8, 977.0], [83.9, 978.0], [84.0, 978.0], [84.1, 978.0], [84.2, 978.0], [84.3, 978.0], [84.4, 979.0], [84.5, 980.0], [84.6, 980.0], [84.7, 980.0], [84.8, 980.0], [84.9, 981.0], [85.0, 981.0], [85.1, 981.0], [85.2, 982.0], [85.3, 982.0], [85.4, 982.0], [85.5, 982.0], [85.6, 982.0], [85.7, 983.0], [85.8, 983.0], [85.9, 984.0], [86.0, 984.0], [86.1, 984.0], [86.2, 985.0], [86.3, 985.0], [86.4, 985.0], [86.5, 986.0], [86.6, 986.0], [86.7, 987.0], [86.8, 988.0], [86.9, 989.0], [87.0, 989.0], [87.1, 990.0], [87.2, 991.0], [87.3, 991.0], [87.4, 992.0], [87.5, 992.0], [87.6, 992.0], [87.7, 992.0], [87.8, 992.0], [87.9, 992.0], [88.0, 993.0], [88.1, 995.0], [88.2, 995.0], [88.3, 997.0], [88.4, 998.0], [88.5, 998.0], [88.6, 1000.0], [88.7, 1000.0], [88.8, 1005.0], [88.9, 1005.0], [89.0, 1006.0], [89.1, 1006.0], [89.2, 1006.0], [89.3, 1007.0], [89.4, 1008.0], [89.5, 1012.0], [89.6, 1012.0], [89.7, 1012.0], [89.8, 1013.0], [89.9, 1071.0], [90.0, 1076.0], [90.1, 1076.0], [90.2, 1077.0], [90.3, 1077.0], [90.4, 1078.0], [90.5, 1078.0], [90.6, 1078.0], [90.7, 1079.0], [90.8, 1079.0], [90.9, 1079.0], [91.0, 1079.0], [91.1, 1079.0], [91.2, 1080.0], [91.3, 1081.0], [91.4, 1081.0], [91.5, 1082.0], [91.6, 1082.0], [91.7, 1082.0], [91.8, 1082.0], [91.9, 1082.0], [92.0, 1082.0], [92.1, 1083.0], [92.2, 1087.0], [92.3, 1088.0], [92.4, 1095.0], [92.5, 1097.0], [92.6, 1097.0], [92.7, 1101.0], [92.8, 1101.0], [92.9, 1101.0], [93.0, 1103.0], [93.1, 1105.0], [93.2, 1105.0], [93.3, 1106.0], [93.4, 1110.0], [93.5, 1111.0], [93.6, 1115.0], [93.7, 1115.0], [93.8, 1172.0], [93.9, 1176.0], [94.0, 1177.0], [94.1, 1178.0], [94.2, 1181.0], [94.3, 1181.0], [94.4, 1181.0], [94.5, 1182.0], [94.6, 1182.0], [94.7, 1183.0], [94.8, 1183.0], [94.9, 1183.0], [95.0, 1188.0], [95.1, 1189.0], [95.2, 1195.0], [95.3, 1195.0], [95.4, 1195.0], [95.5, 1195.0], [95.6, 1196.0], [95.7, 1196.0], [95.8, 1202.0], [95.9, 1214.0], [96.0, 1220.0], [96.1, 1221.0], [96.2, 1222.0], [96.3, 1273.0], [96.4, 1273.0], [96.5, 1289.0], [96.6, 1290.0], [96.7, 1293.0], [96.8, 1296.0], [96.9, 1296.0], [97.0, 1298.0], [97.1, 1301.0], [97.2, 1304.0], [97.3, 1304.0], [97.4, 1309.0], [97.5, 1319.0], [97.6, 1320.0], [97.7, 1322.0], [97.8, 1328.0], [97.9, 1372.0], [98.0, 1372.0], [98.1, 1376.0], [98.2, 1376.0], [98.3, 1395.0], [98.4, 1395.0], [98.5, 1399.0], [98.6, 1400.0], [98.7, 1406.0], [98.8, 1415.0], [98.9, 1428.0], [99.0, 1468.0], [99.1, 1468.0], [99.2, 1496.0], [99.3, 1596.0], [99.4, 1596.0], [99.5, 1597.0], [99.6, 1597.0], [99.7, 1597.0], [99.8, 1633.0], [99.9, 1764.0]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[0.0, 11.0], [0.1, 11.0], [0.2, 12.0], [0.3, 13.0], [0.4, 20.0], [0.5, 20.0], [0.6, 84.0], [0.7, 86.0], [0.8, 88.0], [0.9, 88.0], [1.0, 88.0], [1.1, 97.0], [1.2, 97.0], [1.3, 100.0], [1.4, 100.0], [1.5, 100.0], [1.6, 180.0], [1.7, 185.0], [1.8, 193.0], [1.9, 193.0], [2.0, 193.0], [2.1, 194.0], [2.2, 194.0], [2.3, 194.0], [2.4, 194.0], [2.5, 194.0], [2.6, 194.0], [2.7, 195.0], [2.8, 195.0], [2.9, 195.0], [3.0, 195.0], [3.1, 198.0], [3.2, 199.0], [3.3, 199.0], [3.4, 201.0], [3.5, 201.0], [3.6, 201.0], [3.7, 201.0], [3.8, 202.0], [3.9, 202.0], [4.0, 204.0], [4.1, 205.0], [4.2, 205.0], [4.3, 205.0], [4.4, 205.0], [4.5, 214.0], [4.6, 214.0], [4.7, 214.0], [4.8, 214.0], [4.9, 214.0], [5.0, 288.0], [5.1, 288.0], [5.2, 290.0], [5.3, 290.0], [5.4, 292.0], [5.5, 292.0], [5.6, 292.0], [5.7, 292.0], [5.8, 293.0], [5.9, 293.0], [6.0, 294.0], [6.1, 294.0], [6.2, 294.0], [6.3, 294.0], [6.4, 294.0], [6.5, 294.0], [6.6, 294.0], [6.7, 295.0], [6.8, 295.0], [6.9, 295.0], [7.0, 295.0], [7.1, 295.0], [7.2, 296.0], [7.3, 296.0], [7.4, 296.0], [7.5, 296.0], [7.6, 296.0], [7.7, 296.0], [7.8, 297.0], [7.9, 297.0], [8.0, 298.0], [8.1, 298.0], [8.2, 298.0], [8.3, 299.0], [8.4, 300.0], [8.5, 300.0], [8.6, 300.0], [8.7, 301.0], [8.8, 301.0], [8.9, 301.0], [9.0, 303.0], [9.1, 303.0], [9.2, 303.0], [9.3, 304.0], [9.4, 304.0], [9.5, 304.0], [9.6, 304.0], [9.7, 304.0], [9.8, 305.0], [9.9, 305.0], [10.0, 305.0], [10.1, 305.0], [10.2, 305.0], [10.3, 305.0], [10.4, 308.0], [10.5, 318.0], [10.6, 381.0], [10.7, 385.0], [10.8, 386.0], [10.9, 387.0], [11.0, 387.0], [11.1, 387.0], [11.2, 387.0], [11.3, 387.0], [11.4, 389.0], [11.5, 389.0], [11.6, 389.0], [11.7, 389.0], [11.8, 390.0], [11.9, 390.0], [12.0, 390.0], [12.1, 390.0], [12.2, 390.0], [12.3, 390.0], [12.4, 390.0], [12.5, 390.0], [12.6, 390.0], [12.7, 391.0], [12.8, 391.0], [12.9, 391.0], [13.0, 391.0], [13.1, 391.0], [13.2, 391.0], [13.3, 391.0], [13.4, 391.0], [13.5, 391.0], [13.6, 392.0], [13.7, 392.0], [13.8, 392.0], [13.9, 392.0], [14.0, 392.0], [14.1, 392.0], [14.2, 392.0], [14.3, 392.0], [14.4, 392.0], [14.5, 393.0], [14.6, 393.0], [14.7, 393.0], [14.8, 393.0], [14.9, 393.0], [15.0, 393.0], [15.1, 393.0], [15.2, 393.0], [15.3, 393.0], [15.4, 393.0], [15.5, 393.0], [15.6, 393.0], [15.7, 393.0], [15.8, 393.0], [15.9, 394.0], [16.0, 394.0], [16.1, 394.0], [16.2, 394.0], [16.3, 394.0], [16.4, 394.0], [16.5, 395.0], [16.6, 395.0], [16.7, 395.0], [16.8, 395.0], [16.9, 396.0], [17.0, 396.0], [17.1, 396.0], [17.2, 396.0], [17.3, 396.0], [17.4, 396.0], [17.5, 396.0], [17.6, 396.0], [17.7, 397.0], [17.8, 397.0], [17.9, 397.0], [18.0, 397.0], [18.1, 397.0], [18.2, 397.0], [18.3, 398.0], [18.4, 398.0], [18.5, 398.0], [18.6, 399.0], [18.7, 399.0], [18.8, 399.0], [18.9, 400.0], [19.0, 401.0], [19.1, 401.0], [19.2, 401.0], [19.3, 401.0], [19.4, 401.0], [19.5, 402.0], [19.6, 402.0], [19.7, 403.0], [19.8, 403.0], [19.9, 403.0], [20.0, 403.0], [20.1, 403.0], [20.2, 404.0], [20.3, 404.0], [20.4, 405.0], [20.5, 481.0], [20.6, 484.0], [20.7, 485.0], [20.8, 485.0], [20.9, 486.0], [21.0, 486.0], [21.1, 487.0], [21.2, 487.0], [21.3, 487.0], [21.4, 487.0], [21.5, 488.0], [21.6, 488.0], [21.7, 488.0], [21.8, 488.0], [21.9, 488.0], [22.0, 488.0], [22.1, 488.0], [22.2, 488.0], [22.3, 489.0], [22.4, 489.0], [22.5, 489.0], [22.6, 489.0], [22.7, 489.0], [22.8, 489.0], [22.9, 489.0], [23.0, 489.0], [23.1, 489.0], [23.2, 489.0], [23.3, 489.0], [23.4, 490.0], [23.5, 490.0], [23.6, 490.0], [23.7, 490.0], [23.8, 490.0], [23.9, 490.0], [24.0, 490.0], [24.1, 490.0], [24.2, 490.0], [24.3, 490.0], [24.4, 491.0], [24.5, 491.0], [24.6, 491.0], [24.7, 491.0], [24.8, 491.0], [24.9, 491.0], [25.0, 491.0], [25.1, 491.0], [25.2, 491.0], [25.3, 491.0], [25.4, 491.0], [25.5, 491.0], [25.6, 491.0], [25.7, 491.0], [25.8, 491.0], [25.9, 491.0], [26.0, 491.0], [26.1, 491.0], [26.2, 491.0], [26.3, 492.0], [26.4, 492.0], [26.5, 492.0], [26.6, 492.0], [26.7, 492.0], [26.8, 492.0], [26.9, 492.0], [27.0, 492.0], [27.1, 492.0], [27.2, 493.0], [27.3, 493.0], [27.4, 493.0], [27.5, 493.0], [27.6, 493.0], [27.7, 493.0], [27.8, 493.0], [27.9, 493.0], [28.0, 494.0], [28.1, 494.0], [28.2, 494.0], [28.3, 494.0], [28.4, 494.0], [28.5, 494.0], [28.6, 495.0], [28.7, 495.0], [28.8, 495.0], [28.9, 495.0], [29.0, 496.0], [29.1, 496.0], [29.2, 496.0], [29.3, 496.0], [29.4, 496.0], [29.5, 496.0], [29.6, 496.0], [29.7, 496.0], [29.8, 496.0], [29.9, 496.0], [30.0, 496.0], [30.1, 496.0], [30.2, 496.0], [30.3, 496.0], [30.4, 496.0], [30.5, 496.0], [30.6, 496.0], [30.7, 497.0], [30.8, 497.0], [30.9, 497.0], [31.0, 497.0], [31.1, 497.0], [31.2, 497.0], [31.3, 497.0], [31.4, 497.0], [31.5, 497.0], [31.6, 497.0], [31.7, 497.0], [31.8, 497.0], [31.9, 497.0], [32.0, 498.0], [32.1, 498.0], [32.2, 498.0], [32.3, 499.0], [32.4, 499.0], [32.5, 499.0], [32.6, 499.0], [32.7, 500.0], [32.8, 500.0], [32.9, 500.0], [33.0, 500.0], [33.1, 501.0], [33.2, 501.0], [33.3, 501.0], [33.4, 501.0], [33.5, 501.0], [33.6, 502.0], [33.7, 502.0], [33.8, 503.0], [33.9, 503.0], [34.0, 503.0], [34.1, 503.0], [34.2, 503.0], [34.3, 503.0], [34.4, 504.0], [34.5, 504.0], [34.6, 504.0], [34.7, 505.0], [34.8, 505.0], [34.9, 506.0], [35.0, 506.0], [35.1, 506.0], [35.2, 508.0], [35.3, 508.0], [35.4, 509.0], [35.5, 509.0], [35.6, 509.0], [35.7, 509.0], [35.8, 509.0], [35.9, 509.0], [36.0, 509.0], [36.1, 515.0], [36.2, 525.0], [36.3, 577.0], [36.4, 577.0], [36.5, 578.0], [36.6, 581.0], [36.7, 581.0], [36.8, 581.0], [36.9, 581.0], [37.0, 582.0], [37.1, 582.0], [37.2, 582.0], [37.3, 582.0], [37.4, 582.0], [37.5, 582.0], [37.6, 582.0], [37.7, 582.0], [37.8, 582.0], [37.9, 583.0], [38.0, 583.0], [38.1, 583.0], [38.2, 583.0], [38.3, 583.0], [38.4, 583.0], [38.5, 583.0], [38.6, 584.0], [38.7, 585.0], [38.8, 585.0], [38.9, 585.0], [39.0, 585.0], [39.1, 585.0], [39.2, 585.0], [39.3, 585.0], [39.4, 585.0], [39.5, 585.0], [39.6, 585.0], [39.7, 585.0], [39.8, 586.0], [39.9, 586.0], [40.0, 586.0], [40.1, 586.0], [40.2, 586.0], [40.3, 586.0], [40.4, 586.0], [40.5, 586.0], [40.6, 586.0], [40.7, 586.0], [40.8, 586.0], [40.9, 586.0], [41.0, 586.0], [41.1, 586.0], [41.2, 586.0], [41.3, 587.0], [41.4, 587.0], [41.5, 587.0], [41.6, 587.0], [41.7, 587.0], [41.8, 587.0], [41.9, 587.0], [42.0, 587.0], [42.1, 587.0], [42.2, 587.0], [42.3, 587.0], [42.4, 587.0], [42.5, 587.0], [42.6, 588.0], [42.7, 588.0], [42.8, 588.0], [42.9, 588.0], [43.0, 588.0], [43.1, 588.0], [43.2, 588.0], [43.3, 588.0], [43.4, 588.0], [43.5, 588.0], [43.6, 589.0], [43.7, 589.0], [43.8, 589.0], [43.9, 589.0], [44.0, 589.0], [44.1, 589.0], [44.2, 589.0], [44.3, 589.0], [44.4, 589.0], [44.5, 589.0], [44.6, 589.0], [44.7, 589.0], [44.8, 589.0], [44.9, 589.0], [45.0, 589.0], [45.1, 589.0], [45.2, 590.0], [45.3, 590.0], [45.4, 590.0], [45.5, 590.0], [45.6, 590.0], [45.7, 590.0], [45.8, 590.0], [45.9, 590.0], [46.0, 590.0], [46.1, 590.0], [46.2, 590.0], [46.3, 590.0], [46.4, 590.0], [46.5, 590.0], [46.6, 590.0], [46.7, 590.0], [46.8, 591.0], [46.9, 591.0], [47.0, 591.0], [47.1, 591.0], [47.2, 591.0], [47.3, 591.0], [47.4, 591.0], [47.5, 591.0], [47.6, 591.0], [47.7, 591.0], [47.8, 591.0], [47.9, 591.0], [48.0, 591.0], [48.1, 591.0], [48.2, 591.0], [48.3, 592.0], [48.4, 592.0], [48.5, 592.0], [48.6, 592.0], [48.7, 592.0], [48.8, 592.0], [48.9, 592.0], [49.0, 592.0], [49.1, 592.0], [49.2, 592.0], [49.3, 592.0], [49.4, 593.0], [49.5, 593.0], [49.6, 593.0], [49.7, 593.0], [49.8, 593.0], [49.9, 593.0], [50.0, 593.0], [50.1, 593.0], [50.2, 593.0], [50.3, 593.0], [50.4, 593.0], [50.5, 593.0], [50.6, 593.0], [50.7, 593.0], [50.8, 593.0], [50.9, 593.0], [51.0, 593.0], [51.1, 594.0], [51.2, 594.0], [51.3, 594.0], [51.4, 594.0], [51.5, 594.0], [51.6, 594.0], [51.7, 594.0], [51.8, 594.0], [51.9, 594.0], [52.0, 594.0], [52.1, 595.0], [52.2, 595.0], [52.3, 595.0], [52.4, 595.0], [52.5, 595.0], [52.6, 595.0], [52.7, 596.0], [52.8, 596.0], [52.9, 596.0], [53.0, 596.0], [53.1, 596.0], [53.2, 597.0], [53.3, 597.0], [53.4, 597.0], [53.5, 597.0], [53.6, 597.0], [53.7, 597.0], [53.8, 597.0], [53.9, 597.0], [54.0, 598.0], [54.1, 598.0], [54.2, 598.0], [54.3, 598.0], [54.4, 599.0], [54.5, 599.0], [54.6, 599.0], [54.7, 599.0], [54.8, 599.0], [54.9, 599.0], [55.0, 599.0], [55.1, 600.0], [55.2, 600.0], [55.3, 600.0], [55.4, 600.0], [55.5, 600.0], [55.6, 600.0], [55.7, 601.0], [55.8, 601.0], [55.9, 601.0], [56.0, 601.0], [56.1, 601.0], [56.2, 601.0], [56.3, 601.0], [56.4, 601.0], [56.5, 602.0], [56.6, 602.0], [56.7, 602.0], [56.8, 602.0], [56.9, 602.0], [57.0, 602.0], [57.1, 602.0], [57.2, 603.0], [57.3, 603.0], [57.4, 603.0], [57.5, 603.0], [57.6, 604.0], [57.7, 604.0], [57.8, 604.0], [57.9, 604.0], [58.0, 606.0], [58.1, 606.0], [58.2, 606.0], [58.3, 607.0], [58.4, 608.0], [58.5, 608.0], [58.6, 608.0], [58.7, 608.0], [58.8, 609.0], [58.9, 609.0], [59.0, 609.0], [59.1, 609.0], [59.2, 609.0], [59.3, 609.0], [59.4, 610.0], [59.5, 610.0], [59.6, 611.0], [59.7, 611.0], [59.8, 613.0], [59.9, 613.0], [60.0, 613.0], [60.1, 613.0], [60.2, 614.0], [60.3, 614.0], [60.4, 615.0], [60.5, 616.0], [60.6, 617.0], [60.7, 620.0], [60.8, 632.0], [60.9, 678.0], [61.0, 678.0], [61.1, 679.0], [61.2, 679.0], [61.3, 679.0], [61.4, 679.0], [61.5, 681.0], [61.6, 682.0], [61.7, 682.0], [61.8, 682.0], [61.9, 682.0], [62.0, 682.0], [62.1, 683.0], [62.2, 683.0], [62.3, 683.0], [62.4, 683.0], [62.5, 683.0], [62.6, 683.0], [62.7, 683.0], [62.8, 683.0], [62.9, 683.0], [63.0, 683.0], [63.1, 684.0], [63.2, 684.0], [63.3, 684.0], [63.4, 684.0], [63.5, 684.0], [63.6, 684.0], [63.7, 684.0], [63.8, 684.0], [63.9, 684.0], [64.0, 684.0], [64.1, 685.0], [64.2, 685.0], [64.3, 685.0], [64.4, 685.0], [64.5, 685.0], [64.6, 685.0], [64.7, 685.0], [64.8, 685.0], [64.9, 685.0], [65.0, 685.0], [65.1, 685.0], [65.2, 685.0], [65.3, 685.0], [65.4, 685.0], [65.5, 685.0], [65.6, 685.0], [65.7, 685.0], [65.8, 685.0], [65.9, 686.0], [66.0, 686.0], [66.1, 686.0], [66.2, 686.0], [66.3, 686.0], [66.4, 686.0], [66.5, 686.0], [66.6, 686.0], [66.7, 686.0], [66.8, 686.0], [66.9, 686.0], [67.0, 686.0], [67.1, 687.0], [67.2, 687.0], [67.3, 687.0], [67.4, 687.0], [67.5, 687.0], [67.6, 687.0], [67.7, 687.0], [67.8, 687.0], [67.9, 687.0], [68.0, 687.0], [68.1, 687.0], [68.2, 687.0], [68.3, 687.0], [68.4, 687.0], [68.5, 688.0], [68.6, 688.0], [68.7, 688.0], [68.8, 688.0], [68.9, 688.0], [69.0, 688.0], [69.1, 688.0], [69.2, 688.0], [69.3, 688.0], [69.4, 688.0], [69.5, 688.0], [69.6, 688.0], [69.7, 688.0], [69.8, 688.0], [69.9, 688.0], [70.0, 688.0], [70.1, 688.0], [70.2, 688.0], [70.3, 689.0], [70.4, 689.0], [70.5, 689.0], [70.6, 689.0], [70.7, 689.0], [70.8, 689.0], [70.9, 689.0], [71.0, 689.0], [71.1, 689.0], [71.2, 689.0], [71.3, 689.0], [71.4, 689.0], [71.5, 689.0], [71.6, 689.0], [71.7, 689.0], [71.8, 690.0], [71.9, 690.0], [72.0, 690.0], [72.1, 690.0], [72.2, 690.0], [72.3, 691.0], [72.4, 691.0], [72.5, 691.0], [72.6, 691.0], [72.7, 691.0], [72.8, 691.0], [72.9, 691.0], [73.0, 691.0], [73.1, 691.0], [73.2, 691.0], [73.3, 691.0], [73.4, 691.0], [73.5, 692.0], [73.6, 692.0], [73.7, 692.0], [73.8, 692.0], [73.9, 692.0], [74.0, 693.0], [74.1, 693.0], [74.2, 693.0], [74.3, 693.0], [74.4, 693.0], [74.5, 694.0], [74.6, 694.0], [74.7, 694.0], [74.8, 694.0], [74.9, 694.0], [75.0, 695.0], [75.1, 695.0], [75.2, 695.0], [75.3, 695.0], [75.4, 695.0], [75.5, 695.0], [75.6, 696.0], [75.7, 696.0], [75.8, 696.0], [75.9, 697.0], [76.0, 697.0], [76.1, 697.0], [76.2, 697.0], [76.3, 697.0], [76.4, 697.0], [76.5, 697.0], [76.6, 697.0], [76.7, 697.0], [76.8, 698.0], [76.9, 698.0], [77.0, 699.0], [77.1, 699.0], [77.2, 699.0], [77.3, 699.0], [77.4, 700.0], [77.5, 700.0], [77.6, 700.0], [77.7, 700.0], [77.8, 700.0], [77.9, 701.0], [78.0, 702.0], [78.1, 702.0], [78.2, 702.0], [78.3, 703.0], [78.4, 704.0], [78.5, 704.0], [78.6, 704.0], [78.7, 704.0], [78.8, 704.0], [78.9, 705.0], [79.0, 706.0], [79.1, 706.0], [79.2, 706.0], [79.3, 706.0], [79.4, 707.0], [79.5, 707.0], [79.6, 707.0], [79.7, 707.0], [79.8, 707.0], [79.9, 712.0], [80.0, 712.0], [80.1, 712.0], [80.2, 712.0], [80.3, 714.0], [80.4, 714.0], [80.5, 714.0], [80.6, 715.0], [80.7, 716.0], [80.8, 717.0], [80.9, 769.0], [81.0, 769.0], [81.1, 770.0], [81.2, 773.0], [81.3, 777.0], [81.4, 778.0], [81.5, 779.0], [81.6, 779.0], [81.7, 779.0], [81.8, 779.0], [81.9, 779.0], [82.0, 780.0], [82.1, 781.0], [82.2, 781.0], [82.3, 781.0], [82.4, 781.0], [82.5, 782.0], [82.6, 782.0], [82.7, 782.0], [82.8, 782.0], [82.9, 782.0], [83.0, 782.0], [83.1, 782.0], [83.2, 782.0], [83.3, 782.0], [83.4, 783.0], [83.5, 783.0], [83.6, 783.0], [83.7, 783.0], [83.8, 783.0], [83.9, 784.0], [84.0, 784.0], [84.1, 784.0], [84.2, 785.0], [84.3, 785.0], [84.4, 785.0], [84.5, 785.0], [84.6, 785.0], [84.7, 785.0], [84.8, 786.0], [84.9, 786.0], [85.0, 786.0], [85.1, 786.0], [85.2, 786.0], [85.3, 786.0], [85.4, 786.0], [85.5, 786.0], [85.6, 786.0], [85.7, 786.0], [85.8, 786.0], [85.9, 787.0], [86.0, 787.0], [86.1, 787.0], [86.2, 788.0], [86.3, 788.0], [86.4, 788.0], [86.5, 788.0], [86.6, 789.0], [86.7, 789.0], [86.8, 789.0], [86.9, 789.0], [87.0, 789.0], [87.1, 789.0], [87.2, 789.0], [87.3, 789.0], [87.4, 789.0], [87.5, 790.0], [87.6, 790.0], [87.7, 792.0], [87.8, 794.0], [87.9, 795.0], [88.0, 796.0], [88.1, 797.0], [88.2, 797.0], [88.3, 797.0], [88.4, 798.0], [88.5, 799.0], [88.6, 801.0], [88.7, 803.0], [88.8, 805.0], [88.9, 806.0], [89.0, 806.0], [89.1, 806.0], [89.2, 806.0], [89.3, 806.0], [89.4, 807.0], [89.5, 807.0], [89.6, 807.0], [89.7, 808.0], [89.8, 808.0], [89.9, 810.0], [90.0, 815.0], [90.1, 815.0], [90.2, 870.0], [90.3, 870.0], [90.4, 870.0], [90.5, 870.0], [90.6, 876.0], [90.7, 877.0], [90.8, 878.0], [90.9, 878.0], [91.0, 878.0], [91.1, 878.0], [91.2, 880.0], [91.3, 880.0], [91.4, 881.0], [91.5, 881.0], [91.6, 881.0], [91.7, 882.0], [91.8, 882.0], [91.9, 882.0], [92.0, 882.0], [92.1, 882.0], [92.2, 883.0], [92.3, 883.0], [92.4, 884.0], [92.5, 884.0], [92.6, 884.0], [92.7, 886.0], [92.8, 886.0], [92.9, 887.0], [93.0, 887.0], [93.1, 887.0], [93.2, 888.0], [93.3, 888.0], [93.4, 888.0], [93.5, 888.0], [93.6, 889.0], [93.7, 889.0], [93.8, 893.0], [93.9, 894.0], [94.0, 895.0], [94.1, 895.0], [94.2, 895.0], [94.3, 895.0], [94.4, 896.0], [94.5, 899.0], [94.6, 899.0], [94.7, 899.0], [94.8, 900.0], [94.9, 901.0], [95.0, 901.0], [95.1, 902.0], [95.2, 903.0], [95.3, 905.0], [95.4, 905.0], [95.5, 905.0], [95.6, 906.0], [95.7, 906.0], [95.8, 908.0], [95.9, 909.0], [96.0, 909.0], [96.1, 911.0], [96.2, 912.0], [96.3, 969.0], [96.4, 969.0], [96.5, 977.0], [96.6, 978.0], [96.7, 981.0], [96.8, 983.0], [96.9, 986.0], [97.0, 987.0], [97.1, 988.0], [97.2, 990.0], [97.3, 990.0], [97.4, 993.0], [97.5, 995.0], [97.6, 1002.0], [97.7, 1020.0], [97.8, 1021.0], [97.9, 1023.0], [98.0, 1077.0], [98.1, 1084.0], [98.2, 1084.0], [98.3, 1091.0], [98.4, 1094.0], [98.5, 1096.0], [98.6, 1101.0], [98.7, 1102.0], [98.8, 1118.0], [98.9, 1218.0], [99.0, 1220.0], [99.1, 1220.0], [99.2, 1220.0], [99.3, 1314.0], [99.4, 1314.0], [99.5, 1317.0], [99.6, 1317.0], [99.7, 1318.0], [99.8, 1319.0], [99.9, 1320.0]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[0.0, 52.0], [0.1, 52.0], [0.2, 58.0], [0.3, 73.0], [0.4, 73.0], [0.5, 83.0], [0.6, 87.0], [0.7, 87.0], [0.8, 105.0], [0.9, 157.0], [1.0, 160.0], [1.1, 211.0], [1.2, 211.0], [1.3, 236.0], [1.4, 241.0], [1.5, 250.0], [1.6, 251.0], [1.7, 289.0], [1.8, 289.0], [1.9, 290.0], [2.0, 290.0], [2.1, 292.0], [2.2, 292.0], [2.3, 292.0], [2.4, 292.0], [2.5, 292.0], [2.6, 296.0], [2.7, 328.0], [2.8, 395.0], [2.9, 429.0], [3.0, 488.0], [3.1, 490.0], [3.2, 491.0], [3.3, 498.0], [3.4, 498.0], [3.5, 508.0], [3.6, 518.0], [3.7, 519.0], [3.8, 582.0], [3.9, 584.0], [4.0, 585.0], [4.1, 586.0], [4.2, 587.0], [4.3, 588.0], [4.4, 588.0], [4.5, 588.0], [4.6, 588.0], [4.7, 589.0], [4.8, 589.0], [4.9, 590.0], [5.0, 591.0], [5.1, 591.0], [5.2, 595.0], [5.3, 602.0], [5.4, 616.0], [5.5, 622.0], [5.6, 622.0], [5.7, 652.0], [5.8, 673.0], [5.9, 681.0], [6.0, 685.0], [6.1, 691.0], [6.2, 695.0], [6.3, 698.0], [6.4, 698.0], [6.5, 703.0], [6.6, 704.0], [6.7, 704.0], [6.8, 710.0], [6.9, 756.0], [7.0, 780.0], [7.1, 785.0], [7.2, 785.0], [7.3, 785.0], [7.4, 785.0], [7.5, 785.0], [7.6, 787.0], [7.7, 787.0], [7.8, 787.0], [7.9, 787.0], [8.0, 790.0], [8.1, 790.0], [8.2, 791.0], [8.3, 793.0], [8.4, 794.0], [8.5, 795.0], [8.6, 795.0], [8.7, 798.0], [8.8, 799.0], [8.9, 799.0], [9.0, 800.0], [9.1, 801.0], [9.2, 801.0], [9.3, 801.0], [9.4, 802.0], [9.5, 810.0], [9.6, 812.0], [9.7, 839.0], [9.8, 856.0], [9.9, 879.0], [10.0, 879.0], [10.1, 879.0], [10.2, 880.0], [10.3, 881.0], [10.4, 881.0], [10.5, 881.0], [10.6, 882.0], [10.7, 883.0], [10.8, 884.0], [10.9, 884.0], [11.0, 885.0], [11.1, 885.0], [11.2, 885.0], [11.3, 885.0], [11.4, 886.0], [11.5, 886.0], [11.6, 886.0], [11.7, 886.0], [11.8, 887.0], [11.9, 887.0], [12.0, 887.0], [12.1, 887.0], [12.2, 888.0], [12.3, 888.0], [12.4, 888.0], [12.5, 888.0], [12.6, 888.0], [12.7, 890.0], [12.8, 890.0], [12.9, 891.0], [13.0, 891.0], [13.1, 891.0], [13.2, 894.0], [13.3, 894.0], [13.4, 894.0], [13.5, 894.0], [13.6, 894.0], [13.7, 895.0], [13.8, 896.0], [13.9, 897.0], [14.0, 899.0], [14.1, 900.0], [14.2, 900.0], [14.3, 934.0], [14.4, 937.0], [14.5, 937.0], [14.6, 940.0], [14.7, 944.0], [14.8, 959.0], [14.9, 967.0], [15.0, 976.0], [15.1, 977.0], [15.2, 978.0], [15.3, 978.0], [15.4, 978.0], [15.5, 979.0], [15.6, 979.0], [15.7, 980.0], [15.8, 980.0], [15.9, 980.0], [16.0, 981.0], [16.1, 981.0], [16.2, 981.0], [16.3, 981.0], [16.4, 981.0], [16.5, 981.0], [16.6, 982.0], [16.7, 982.0], [16.8, 982.0], [16.9, 983.0], [17.0, 983.0], [17.1, 984.0], [17.2, 984.0], [17.3, 985.0], [17.4, 985.0], [17.5, 986.0], [17.6, 986.0], [17.7, 986.0], [17.8, 986.0], [17.9, 986.0], [18.0, 987.0], [18.1, 987.0], [18.2, 987.0], [18.3, 988.0], [18.4, 989.0], [18.5, 990.0], [18.6, 990.0], [18.7, 990.0], [18.8, 990.0], [18.9, 990.0], [19.0, 991.0], [19.1, 991.0], [19.2, 992.0], [19.3, 992.0], [19.4, 992.0], [19.5, 992.0], [19.6, 993.0], [19.7, 993.0], [19.8, 993.0], [19.9, 994.0], [20.0, 994.0], [20.1, 994.0], [20.2, 994.0], [20.3, 994.0], [20.4, 995.0], [20.5, 997.0], [20.6, 997.0], [20.7, 998.0], [20.8, 998.0], [20.9, 998.0], [21.0, 1001.0], [21.1, 1003.0], [21.2, 1003.0], [21.3, 1004.0], [21.4, 1005.0], [21.5, 1010.0], [21.6, 1012.0], [21.7, 1014.0], [21.8, 1014.0], [21.9, 1021.0], [22.0, 1067.0], [22.1, 1074.0], [22.2, 1077.0], [22.3, 1077.0], [22.4, 1077.0], [22.5, 1077.0], [22.6, 1078.0], [22.7, 1078.0], [22.8, 1078.0], [22.9, 1078.0], [23.0, 1078.0], [23.1, 1078.0], [23.2, 1078.0], [23.3, 1078.0], [23.4, 1078.0], [23.5, 1078.0], [23.6, 1078.0], [23.7, 1079.0], [23.8, 1079.0], [23.9, 1079.0], [24.0, 1079.0], [24.1, 1079.0], [24.2, 1079.0], [24.3, 1080.0], [24.4, 1080.0], [24.5, 1080.0], [24.6, 1080.0], [24.7, 1080.0], [24.8, 1080.0], [24.9, 1080.0], [25.0, 1080.0], [25.1, 1080.0], [25.2, 1080.0], [25.3, 1080.0], [25.4, 1080.0], [25.5, 1080.0], [25.6, 1080.0], [25.7, 1081.0], [25.8, 1081.0], [25.9, 1081.0], [26.0, 1081.0], [26.1, 1081.0], [26.2, 1081.0], [26.3, 1081.0], [26.4, 1081.0], [26.5, 1081.0], [26.6, 1082.0], [26.7, 1082.0], [26.8, 1082.0], [26.9, 1082.0], [27.0, 1082.0], [27.1, 1082.0], [27.2, 1083.0], [27.3, 1083.0], [27.4, 1083.0], [27.5, 1083.0], [27.6, 1083.0], [27.7, 1083.0], [27.8, 1083.0], [27.9, 1084.0], [28.0, 1084.0], [28.1, 1084.0], [28.2, 1084.0], [28.3, 1084.0], [28.4, 1084.0], [28.5, 1085.0], [28.6, 1085.0], [28.7, 1085.0], [28.8, 1085.0], [28.9, 1085.0], [29.0, 1085.0], [29.1, 1085.0], [29.2, 1085.0], [29.3, 1085.0], [29.4, 1085.0], [29.5, 1086.0], [29.6, 1086.0], [29.7, 1086.0], [29.8, 1087.0], [29.9, 1087.0], [30.0, 1087.0], [30.1, 1087.0], [30.2, 1087.0], [30.3, 1087.0], [30.4, 1087.0], [30.5, 1088.0], [30.6, 1088.0], [30.7, 1088.0], [30.8, 1088.0], [30.9, 1088.0], [31.0, 1088.0], [31.1, 1088.0], [31.2, 1088.0], [31.3, 1088.0], [31.4, 1088.0], [31.5, 1088.0], [31.6, 1088.0], [31.7, 1088.0], [31.8, 1088.0], [31.9, 1089.0], [32.0, 1089.0], [32.1, 1089.0], [32.2, 1089.0], [32.3, 1089.0], [32.4, 1089.0], [32.5, 1089.0], [32.6, 1089.0], [32.7, 1090.0], [32.8, 1090.0], [32.9, 1090.0], [33.0, 1090.0], [33.1, 1091.0], [33.2, 1091.0], [33.3, 1092.0], [33.4, 1092.0], [33.5, 1092.0], [33.6, 1093.0], [33.7, 1093.0], [33.8, 1093.0], [33.9, 1093.0], [34.0, 1094.0], [34.1, 1094.0], [34.2, 1094.0], [34.3, 1094.0], [34.4, 1095.0], [34.5, 1095.0], [34.6, 1095.0], [34.7, 1096.0], [34.8, 1096.0], [34.9, 1096.0], [35.0, 1096.0], [35.1, 1097.0], [35.2, 1097.0], [35.3, 1097.0], [35.4, 1097.0], [35.5, 1097.0], [35.6, 1097.0], [35.7, 1098.0], [35.8, 1098.0], [35.9, 1098.0], [36.0, 1099.0], [36.1, 1099.0], [36.2, 1099.0], [36.3, 1099.0], [36.4, 1100.0], [36.5, 1100.0], [36.6, 1100.0], [36.7, 1100.0], [36.8, 1100.0], [36.9, 1100.0], [37.0, 1100.0], [37.1, 1101.0], [37.2, 1102.0], [37.3, 1106.0], [37.4, 1106.0], [37.5, 1106.0], [37.6, 1107.0], [37.7, 1107.0], [37.8, 1107.0], [37.9, 1107.0], [38.0, 1107.0], [38.1, 1107.0], [38.2, 1107.0], [38.3, 1108.0], [38.4, 1109.0], [38.5, 1110.0], [38.6, 1112.0], [38.7, 1113.0], [38.8, 1114.0], [38.9, 1114.0], [39.0, 1114.0], [39.1, 1114.0], [39.2, 1114.0], [39.3, 1115.0], [39.4, 1117.0], [39.5, 1118.0], [39.6, 1124.0], [39.7, 1127.0], [39.8, 1134.0], [39.9, 1165.0], [40.0, 1166.0], [40.1, 1166.0], [40.2, 1167.0], [40.3, 1168.0], [40.4, 1172.0], [40.5, 1172.0], [40.6, 1173.0], [40.7, 1173.0], [40.8, 1173.0], [40.9, 1173.0], [41.0, 1174.0], [41.1, 1174.0], [41.2, 1174.0], [41.3, 1174.0], [41.4, 1174.0], [41.5, 1174.0], [41.6, 1174.0], [41.7, 1174.0], [41.8, 1174.0], [41.9, 1175.0], [42.0, 1176.0], [42.1, 1176.0], [42.2, 1176.0], [42.3, 1176.0], [42.4, 1176.0], [42.5, 1176.0], [42.6, 1176.0], [42.7, 1176.0], [42.8, 1176.0], [42.9, 1176.0], [43.0, 1176.0], [43.1, 1176.0], [43.2, 1176.0], [43.3, 1176.0], [43.4, 1176.0], [43.5, 1177.0], [43.6, 1177.0], [43.7, 1177.0], [43.8, 1177.0], [43.9, 1177.0], [44.0, 1177.0], [44.1, 1177.0], [44.2, 1177.0], [44.3, 1177.0], [44.4, 1177.0], [44.5, 1177.0], [44.6, 1178.0], [44.7, 1178.0], [44.8, 1178.0], [44.9, 1178.0], [45.0, 1178.0], [45.1, 1178.0], [45.2, 1179.0], [45.3, 1179.0], [45.4, 1179.0], [45.5, 1179.0], [45.6, 1179.0], [45.7, 1179.0], [45.8, 1179.0], [45.9, 1180.0], [46.0, 1180.0], [46.1, 1180.0], [46.2, 1180.0], [46.3, 1181.0], [46.4, 1181.0], [46.5, 1182.0], [46.6, 1182.0], [46.7, 1182.0], [46.8, 1182.0], [46.9, 1182.0], [47.0, 1182.0], [47.1, 1183.0], [47.2, 1183.0], [47.3, 1183.0], [47.4, 1183.0], [47.5, 1184.0], [47.6, 1184.0], [47.7, 1184.0], [47.8, 1184.0], [47.9, 1184.0], [48.0, 1184.0], [48.1, 1184.0], [48.2, 1184.0], [48.3, 1184.0], [48.4, 1184.0], [48.5, 1184.0], [48.6, 1184.0], [48.7, 1184.0], [48.8, 1185.0], [48.9, 1185.0], [49.0, 1185.0], [49.1, 1185.0], [49.2, 1185.0], [49.3, 1185.0], [49.4, 1185.0], [49.5, 1185.0], [49.6, 1186.0], [49.7, 1186.0], [49.8, 1186.0], [49.9, 1186.0], [50.0, 1186.0], [50.1, 1186.0], [50.2, 1187.0], [50.3, 1187.0], [50.4, 1187.0], [50.5, 1187.0], [50.6, 1187.0], [50.7, 1188.0], [50.8, 1188.0], [50.9, 1188.0], [51.0, 1188.0], [51.1, 1189.0], [51.2, 1189.0], [51.3, 1189.0], [51.4, 1189.0], [51.5, 1189.0], [51.6, 1189.0], [51.7, 1190.0], [51.8, 1190.0], [51.9, 1190.0], [52.0, 1190.0], [52.1, 1190.0], [52.2, 1191.0], [52.3, 1191.0], [52.4, 1191.0], [52.5, 1192.0], [52.6, 1192.0], [52.7, 1193.0], [52.8, 1193.0], [52.9, 1194.0], [53.0, 1195.0], [53.1, 1196.0], [53.2, 1198.0], [53.3, 1199.0], [53.4, 1199.0], [53.5, 1200.0], [53.6, 1200.0], [53.7, 1200.0], [53.8, 1202.0], [53.9, 1203.0], [54.0, 1203.0], [54.1, 1209.0], [54.2, 1209.0], [54.3, 1209.0], [54.4, 1209.0], [54.5, 1209.0], [54.6, 1211.0], [54.7, 1212.0], [54.8, 1213.0], [54.9, 1213.0], [55.0, 1213.0], [55.1, 1213.0], [55.2, 1214.0], [55.3, 1214.0], [55.4, 1214.0], [55.5, 1216.0], [55.6, 1216.0], [55.7, 1216.0], [55.8, 1217.0], [55.9, 1217.0], [56.0, 1218.0], [56.1, 1223.0], [56.2, 1223.0], [56.3, 1223.0], [56.4, 1267.0], [56.5, 1269.0], [56.6, 1269.0], [56.7, 1269.0], [56.8, 1269.0], [56.9, 1270.0], [57.0, 1270.0], [57.1, 1271.0], [57.2, 1271.0], [57.3, 1271.0], [57.4, 1271.0], [57.5, 1271.0], [57.6, 1271.0], [57.7, 1271.0], [57.8, 1271.0], [57.9, 1272.0], [58.0, 1273.0], [58.1, 1273.0], [58.2, 1273.0], [58.3, 1273.0], [58.4, 1273.0], [58.5, 1273.0], [58.6, 1273.0], [58.7, 1274.0], [58.8, 1274.0], [58.9, 1274.0], [59.0, 1274.0], [59.1, 1274.0], [59.2, 1274.0], [59.3, 1274.0], [59.4, 1274.0], [59.5, 1275.0], [59.6, 1275.0], [59.7, 1275.0], [59.8, 1275.0], [59.9, 1275.0], [60.0, 1275.0], [60.1, 1275.0], [60.2, 1275.0], [60.3, 1275.0], [60.4, 1275.0], [60.5, 1276.0], [60.6, 1276.0], [60.7, 1276.0], [60.8, 1276.0], [60.9, 1276.0], [61.0, 1276.0], [61.1, 1276.0], [61.2, 1276.0], [61.3, 1276.0], [61.4, 1276.0], [61.5, 1276.0], [61.6, 1276.0], [61.7, 1277.0], [61.8, 1277.0], [61.9, 1277.0], [62.0, 1277.0], [62.1, 1277.0], [62.2, 1277.0], [62.3, 1277.0], [62.4, 1278.0], [62.5, 1279.0], [62.6, 1279.0], [62.7, 1279.0], [62.8, 1279.0], [62.9, 1279.0], [63.0, 1279.0], [63.1, 1279.0], [63.2, 1279.0], [63.3, 1279.0], [63.4, 1279.0], [63.5, 1280.0], [63.6, 1280.0], [63.7, 1280.0], [63.8, 1280.0], [63.9, 1281.0], [64.0, 1281.0], [64.1, 1281.0], [64.2, 1281.0], [64.3, 1281.0], [64.4, 1281.0], [64.5, 1281.0], [64.6, 1281.0], [64.7, 1282.0], [64.8, 1282.0], [64.9, 1282.0], [65.0, 1283.0], [65.1, 1283.0], [65.2, 1283.0], [65.3, 1283.0], [65.4, 1284.0], [65.5, 1284.0], [65.6, 1284.0], [65.7, 1284.0], [65.8, 1284.0], [65.9, 1284.0], [66.0, 1285.0], [66.1, 1285.0], [66.2, 1285.0], [66.3, 1285.0], [66.4, 1285.0], [66.5, 1285.0], [66.6, 1285.0], [66.7, 1285.0], [66.8, 1286.0], [66.9, 1286.0], [67.0, 1286.0], [67.1, 1286.0], [67.2, 1286.0], [67.3, 1286.0], [67.4, 1287.0], [67.5, 1287.0], [67.6, 1287.0], [67.7, 1288.0], [67.8, 1288.0], [67.9, 1288.0], [68.0, 1288.0], [68.1, 1289.0], [68.2, 1289.0], [68.3, 1291.0], [68.4, 1292.0], [68.5, 1292.0], [68.6, 1293.0], [68.7, 1293.0], [68.8, 1293.0], [68.9, 1293.0], [69.0, 1294.0], [69.1, 1294.0], [69.2, 1295.0], [69.3, 1295.0], [69.4, 1296.0], [69.5, 1296.0], [69.6, 1296.0], [69.7, 1296.0], [69.8, 1297.0], [69.9, 1297.0], [70.0, 1297.0], [70.1, 1297.0], [70.2, 1298.0], [70.3, 1298.0], [70.4, 1299.0], [70.5, 1299.0], [70.6, 1299.0], [70.7, 1301.0], [70.8, 1301.0], [70.9, 1301.0], [71.0, 1301.0], [71.1, 1301.0], [71.2, 1301.0], [71.3, 1303.0], [71.4, 1303.0], [71.5, 1304.0], [71.6, 1304.0], [71.7, 1304.0], [71.8, 1304.0], [71.9, 1305.0], [72.0, 1306.0], [72.1, 1308.0], [72.2, 1308.0], [72.3, 1308.0], [72.4, 1309.0], [72.5, 1311.0], [72.6, 1312.0], [72.7, 1312.0], [72.8, 1312.0], [72.9, 1312.0], [73.0, 1312.0], [73.1, 1312.0], [73.2, 1313.0], [73.3, 1313.0], [73.4, 1313.0], [73.5, 1314.0], [73.6, 1314.0], [73.7, 1314.0], [73.8, 1316.0], [73.9, 1317.0], [74.0, 1320.0], [74.1, 1322.0], [74.2, 1323.0], [74.3, 1328.0], [74.4, 1331.0], [74.5, 1331.0], [74.6, 1361.0], [74.7, 1366.0], [74.8, 1366.0], [74.9, 1368.0], [75.0, 1369.0], [75.1, 1370.0], [75.2, 1370.0], [75.3, 1370.0], [75.4, 1370.0], [75.5, 1371.0], [75.6, 1371.0], [75.7, 1371.0], [75.8, 1371.0], [75.9, 1371.0], [76.0, 1371.0], [76.1, 1372.0], [76.2, 1372.0], [76.3, 1372.0], [76.4, 1372.0], [76.5, 1372.0], [76.6, 1372.0], [76.7, 1372.0], [76.8, 1372.0], [76.9, 1372.0], [77.0, 1372.0], [77.1, 1373.0], [77.2, 1373.0], [77.3, 1373.0], [77.4, 1373.0], [77.5, 1373.0], [77.6, 1373.0], [77.7, 1374.0], [77.8, 1374.0], [77.9, 1374.0], [78.0, 1374.0], [78.1, 1374.0], [78.2, 1374.0], [78.3, 1374.0], [78.4, 1374.0], [78.5, 1374.0], [78.6, 1374.0], [78.7, 1375.0], [78.8, 1375.0], [78.9, 1375.0], [79.0, 1375.0], [79.1, 1376.0], [79.2, 1376.0], [79.3, 1376.0], [79.4, 1376.0], [79.5, 1376.0], [79.6, 1376.0], [79.7, 1376.0], [79.8, 1377.0], [79.9, 1377.0], [80.0, 1377.0], [80.1, 1377.0], [80.2, 1377.0], [80.3, 1377.0], [80.4, 1378.0], [80.5, 1378.0], [80.6, 1378.0], [80.7, 1378.0], [80.8, 1378.0], [80.9, 1379.0], [81.0, 1379.0], [81.1, 1379.0], [81.2, 1379.0], [81.3, 1381.0], [81.4, 1381.0], [81.5, 1382.0], [81.6, 1382.0], [81.7, 1382.0], [81.8, 1382.0], [81.9, 1383.0], [82.0, 1383.0], [82.1, 1383.0], [82.2, 1384.0], [82.3, 1384.0], [82.4, 1384.0], [82.5, 1387.0], [82.6, 1387.0], [82.7, 1388.0], [82.8, 1388.0], [82.9, 1388.0], [83.0, 1388.0], [83.1, 1389.0], [83.2, 1395.0], [83.3, 1395.0], [83.4, 1395.0], [83.5, 1397.0], [83.6, 1397.0], [83.7, 1397.0], [83.8, 1397.0], [83.9, 1397.0], [84.0, 1397.0], [84.1, 1397.0], [84.2, 1398.0], [84.3, 1398.0], [84.4, 1398.0], [84.5, 1398.0], [84.6, 1399.0], [84.7, 1400.0], [84.8, 1400.0], [84.9, 1402.0], [85.0, 1402.0], [85.1, 1403.0], [85.2, 1403.0], [85.3, 1403.0], [85.4, 1404.0], [85.5, 1405.0], [85.6, 1405.0], [85.7, 1407.0], [85.8, 1412.0], [85.9, 1414.0], [86.0, 1415.0], [86.1, 1418.0], [86.2, 1421.0], [86.3, 1428.0], [86.4, 1455.0], [86.5, 1456.0], [86.6, 1459.0], [86.7, 1459.0], [86.8, 1462.0], [86.9, 1463.0], [87.0, 1466.0], [87.1, 1466.0], [87.2, 1467.0], [87.3, 1468.0], [87.4, 1469.0], [87.5, 1469.0], [87.6, 1470.0], [87.7, 1470.0], [87.8, 1470.0], [87.9, 1470.0], [88.0, 1471.0], [88.1, 1471.0], [88.2, 1472.0], [88.3, 1472.0], [88.4, 1472.0], [88.5, 1472.0], [88.6, 1472.0], [88.7, 1473.0], [88.8, 1474.0], [88.9, 1474.0], [89.0, 1474.0], [89.1, 1475.0], [89.2, 1475.0], [89.3, 1475.0], [89.4, 1476.0], [89.5, 1476.0], [89.6, 1476.0], [89.7, 1478.0], [89.8, 1479.0], [89.9, 1479.0], [90.0, 1479.0], [90.1, 1480.0], [90.2, 1481.0], [90.3, 1485.0], [90.4, 1486.0], [90.5, 1491.0], [90.6, 1492.0], [90.7, 1497.0], [90.8, 1498.0], [90.9, 1498.0], [91.0, 1498.0], [91.1, 1498.0], [91.2, 1498.0], [91.3, 1498.0], [91.4, 1499.0], [91.5, 1499.0], [91.6, 1499.0], [91.7, 1500.0], [91.8, 1502.0], [91.9, 1503.0], [92.0, 1506.0], [92.1, 1507.0], [92.2, 1522.0], [92.3, 1522.0], [92.4, 1525.0], [92.5, 1525.0], [92.6, 1525.0], [92.7, 1525.0], [92.8, 1532.0], [92.9, 1559.0], [93.0, 1559.0], [93.1, 1565.0], [93.2, 1565.0], [93.3, 1565.0], [93.4, 1565.0], [93.5, 1566.0], [93.6, 1567.0], [93.7, 1567.0], [93.8, 1567.0], [93.9, 1569.0], [94.0, 1570.0], [94.1, 1570.0], [94.2, 1571.0], [94.3, 1571.0], [94.4, 1572.0], [94.5, 1572.0], [94.6, 1572.0], [94.7, 1573.0], [94.8, 1573.0], [94.9, 1577.0], [95.0, 1577.0], [95.1, 1578.0], [95.2, 1579.0], [95.3, 1596.0], [95.4, 1598.0], [95.5, 1601.0], [95.6, 1601.0], [95.7, 1601.0], [95.8, 1602.0], [95.9, 1604.0], [96.0, 1621.0], [96.1, 1621.0], [96.2, 1623.0], [96.3, 1626.0], [96.4, 1632.0], [96.5, 1634.0], [96.6, 1665.0], [96.7, 1665.0], [96.8, 1666.0], [96.9, 1701.0], [97.0, 1724.0], [97.1, 1731.0], [97.2, 1735.0], [97.3, 1760.0], [97.4, 1793.0], [97.5, 1811.0], [97.6, 1812.0], [97.7, 1812.0], [97.8, 1812.0], [97.9, 1814.0], [98.0, 1831.0], [98.1, 1831.0], [98.2, 1831.0], [98.3, 1905.0], [98.4, 1906.0], [98.5, 1906.0], [98.6, 1934.0], [98.7, 1987.0], [98.8, 2007.0], [98.9, 2007.0], [99.0, 2007.0], [99.1, 2101.0], [99.2, 2101.0], [99.3, 2101.0], [99.4, 2102.0], [99.5, 2102.0], [99.6, 2102.0], [99.7, 2102.0], [99.8, 2196.0], [99.9, 2201.0], [100.0, 2201.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 206.0, "series": [{"data": [[0.0, 3.0], [600.0, 133.0], [700.0, 68.0], [200.0, 52.0], [800.0, 52.0], [900.0, 11.0], [1000.0, 6.0], [1100.0, 2.0], [300.0, 135.0], [1200.0, 1.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 4.0], [100.0, 24.0], [400.0, 206.0], [1600.0, 3.0], [1700.0, 1.0], [1900.0, 1.0], [500.0, 172.0]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[0.0, 6.0], [600.0, 166.0], [700.0, 177.0], [200.0, 23.0], [800.0, 136.0], [900.0, 86.0], [1000.0, 37.0], [1100.0, 27.0], [300.0, 34.0], [1200.0, 12.0], [1300.0, 13.0], [1400.0, 6.0], [1500.0, 5.0], [100.0, 12.0], [400.0, 70.0], [1600.0, 1.0], [1700.0, 1.0], [500.0, 78.0]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[0.0, 11.0], [600.0, 198.0], [700.0, 100.0], [200.0, 44.0], [800.0, 55.0], [900.0, 25.0], [1000.0, 9.0], [1100.0, 3.0], [300.0, 94.0], [1200.0, 3.0], [1300.0, 7.0], [100.0, 19.0], [400.0, 123.0], [500.0, 199.0]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[0.0, 7.0], [2100.0, 8.0], [2200.0, 1.0], [600.0, 11.0], [700.0, 22.0], [200.0, 14.0], [800.0, 47.0], [900.0, 63.0], [1000.0, 140.0], [1100.0, 155.0], [300.0, 2.0], [1200.0, 157.0], [1300.0, 127.0], [1400.0, 64.0], [1500.0, 35.0], [100.0, 3.0], [400.0, 5.0], [1600.0, 12.0], [1700.0, 6.0], [1800.0, 7.0], [1900.0, 5.0], [500.0, 17.0], [2000.0, 2.0]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 91.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2582.0, "series": [{"data": [[0.0, 897.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2582.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 91.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.7368421052631584, "minX": 1.74887436E12, "maxY": 47.513306908267296, "series": [{"data": [[1.74887436E12, 3.7368421052631584], [1.74887442E12, 47.513306908267296]], "isOverall": false, "label": "线程组", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74887442E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 1764.0, "series": [{"data": [[2.0, 16.666666666666668], [32.0, 1274.0], [33.0, 1036.0], [34.0, 393.0], [35.0, 565.1666666666666], [36.0, 487.0], [37.0, 490.3333333333333], [38.0, 633.0], [39.0, 262.0], [40.0, 344.0], [42.0, 479.0], [43.0, 691.0], [44.0, 594.0], [45.0, 683.0], [46.0, 490.3333333333333], [47.0, 540.0], [48.0, 374.16666666666663], [50.0, 583.2792207792206], [4.0, 102.0], [6.0, 185.0], [8.0, 162.16666666666666], [10.0, 281.0], [12.0, 179.8], [13.0, 196.0], [14.0, 171.33333333333334], [15.0, 196.0], [16.0, 282.0], [17.0, 393.0], [20.0, 328.6666666666667], [21.0, 430.8], [22.0, 202.0], [23.0, 262.6666666666667]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[47.50113636363637, 563.7875000000003]], "isOverall": false, "label": "CheckOut-Aggregated", "isController": false}, {"data": [[2.0, 90.5], [32.0, 1137.7142857142858], [33.0, 907.5714285714286], [35.0, 668.5454545454546], [34.0, 492.0], [37.0, 330.3333333333333], [38.0, 392.0], [39.0, 492.0], [41.0, 556.6666666666666], [43.0, 492.5], [44.0, 615.5], [45.0, 652.6666666666666], [46.0, 611.2], [47.0, 659.9999999999999], [48.0, 514.0], [50.0, 789.5340179717588], [4.0, 96.66666666666667], [5.0, 106.0], [7.0, 146.0], [8.0, 189.5], [9.0, 112.0], [11.0, 255.2], [12.0, 204.0], [13.0, 344.0], [14.0, 267.0], [15.0, 193.0], [1.0, 20.0], [18.0, 454.1666666666667], [19.0, 324.5], [20.0, 405.0], [21.0, 420.99999999999994], [22.0, 351.5], [26.0, 857.6666666666666], [31.0, 1764.0]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[47.28988764044939, 757.2191011235965]], "isOverall": false, "label": "Add to Cart-Aggregated", "isController": false}, {"data": [[2.0, 12.5], [32.0, 969.0], [35.0, 290.0], [36.0, 331.6], [37.0, 298.0], [38.0, 392.0], [39.0, 194.0], [40.0, 392.0], [41.0, 528.6], [42.0, 488.75], [43.0, 590.1666666666666], [44.0, 638.5], [45.0, 585.0], [46.0, 567.3999999999999], [47.0, 531.5], [3.0, 87.33333333333333], [48.0, 440.5], [50.0, 620.2506426735221], [4.0, 84.0], [6.0, 59.25], [7.0, 100.0], [8.0, 185.0], [9.0, 97.0], [10.0, 192.25], [11.0, 227.33333333333334], [12.0, 204.0], [13.0, 193.0], [14.0, 200.0], [1.0, 11.0], [16.0, 276.5], [17.0, 295.0], [18.0, 296.5], [19.0, 202.5], [21.0, 288.0], [22.0, 304.3333333333333], [23.0, 201.0], [26.0, 631.0], [27.0, 687.8333333333334], [31.0, 823.6666666666667]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[47.20112359550559, 595.1258426966288]], "isOverall": false, "label": "View Cart-Aggregated", "isController": false}, {"data": [[2.0, 421.0], [33.0, 1066.5], [34.0, 1426.0], [35.0, 806.0], [36.0, 718.5], [38.0, 891.5714285714286], [39.0, 900.25], [40.0, 1060.75], [41.0, 910.5], [42.0, 1054.4285714285716], [43.0, 1055.5], [44.0, 1027.6], [46.0, 1148.0], [47.0, 1106.6666666666667], [3.0, 262.25], [49.0, 1027.5], [48.0, 790.0], [50.0, 1256.1459948320407], [4.0, 73.0], [5.0, 752.5], [6.0, 230.83333333333334], [7.0, 160.0], [8.0, 767.3333333333334], [9.0, 267.2], [10.0, 481.8], [11.0, 236.0], [12.0, 656.3333333333334], [13.0, 578.3333333333334], [15.0, 529.0], [1.0, 83.0], [16.0, 729.8333333333334], [17.0, 588.0], [18.0, 654.4], [19.0, 691.0], [20.0, 603.0], [22.0, 602.0], [23.0, 597.8181818181819], [27.0, 920.0999999999999]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[46.22087912087906, 1178.4417582417577]], "isOverall": false, "label": "Home Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 127.26666666666667, "minX": 1.74887436E12, "maxY": 471020.56666666665, "series": [{"data": [[1.74887436E12, 5279.966666666666], [1.74887442E12, 471020.56666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74887436E12, 127.26666666666667], [1.74887442E12, 13913.566666666668]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74887442E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 56.27272727272727, "minX": 1.74887436E12, "maxY": 1193.4046822742464, "series": [{"data": [[1.74887436E12, 77.28571428571429], [1.74887442E12, 567.6884306987398]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[1.74887436E12, 85.28571428571428], [1.74887442E12, 762.5458663646665]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[1.74887436E12, 56.27272727272727], [1.74887442E12, 601.8691695108081]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[1.74887436E12, 146.0], [1.74887442E12, 1193.4046822742464]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74887442E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 56.18181818181818, "minX": 1.74887436E12, "maxY": 1168.1047937569697, "series": [{"data": [[1.74887436E12, 77.28571428571429], [1.74887442E12, 548.9427262313858]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[1.74887436E12, 85.28571428571428], [1.74887442E12, 737.9637599094002]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[1.74887436E12, 56.18181818181818], [1.74887442E12, 581.1160409556311]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[1.74887436E12, 125.69230769230768], [1.74887442E12, 1168.1047937569697]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74887442E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74887436E12, "maxY": 1.6923076923076925, "series": [{"data": [[1.74887436E12, 0.0], [1.74887442E12, 0.0]], "isOverall": false, "label": "CheckOut", "isController": false}, {"data": [[1.74887436E12, 0.0], [1.74887442E12, 0.0]], "isOverall": false, "label": "Add to Cart", "isController": false}, {"data": [[1.74887436E12, 0.0], [1.74887442E12, 0.0]], "isOverall": false, "label": "View Cart", "isController": false}, {"data": [[1.74887436E12, 1.6923076923076925], [1.74887442E12, 0.03344481605351177]], "isOverall": false, "label": "Home Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74887442E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.74887436E12, "maxY": 2201.0, "series": [{"data": [[1.74887436E12, 292.0], [1.74887442E12, 2201.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74887436E12, 253.90000000000006], [1.74887442E12, 1286.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74887436E12, 292.0], [1.74887442E12, 1671.3600000000006]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74887436E12, 292.0], [1.74887442E12, 1395.6999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74887436E12, 11.0], [1.74887442E12, 97.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74887436E12, 88.0], [1.74887442E12, 695.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74887442E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 18.5, "minX": 4.0, "maxY": 1285.0, "series": [{"data": [[34.0, 90.5], [35.0, 782.0], [36.0, 299.5], [41.0, 1099.0], [42.0, 492.5], [44.0, 194.5], [47.0, 809.0], [50.0, 712.0], [52.0, 712.0], [55.0, 617.0], [54.0, 881.0], [57.0, 899.0], [59.0, 608.0], [58.0, 780.5], [61.0, 700.0], [60.0, 582.0], [62.0, 691.0], [63.0, 683.0], [4.0, 18.5], [64.0, 695.0], [66.0, 695.0], [65.0, 886.0], [67.0, 1285.0], [70.0, 702.5], [69.0, 689.0], [71.0, 682.0], [68.0, 737.0], [73.0, 689.0], [75.0, 781.0], [72.0, 780.5], [79.0, 782.0], [77.0, 681.0], [78.0, 698.0], [76.0, 593.0], [82.0, 686.0], [86.0, 714.0], [23.0, 590.0], [26.0, 870.0], [27.0, 906.0], [30.0, 777.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 86.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 18.5, "minX": 4.0, "maxY": 1185.0, "series": [{"data": [[34.0, 90.5], [35.0, 780.0], [36.0, 299.0], [41.0, 1099.0], [42.0, 492.0], [44.0, 194.5], [47.0, 809.0], [50.0, 706.0], [52.0, 712.0], [55.0, 614.0], [54.0, 784.0], [57.0, 899.0], [59.0, 602.0], [58.0, 690.0], [61.0, 697.0], [60.0, 580.0], [62.0, 685.0], [63.0, 682.0], [4.0, 18.5], [64.0, 693.0], [66.0, 606.0], [65.0, 884.5], [67.0, 1185.0], [70.0, 701.5], [69.0, 688.0], [71.0, 674.0], [68.0, 692.5], [73.0, 681.0], [75.0, 686.0], [72.0, 734.0], [79.0, 781.0], [77.0, 590.0], [78.0, 696.5], [76.0, 593.0], [82.0, 686.0], [86.0, 709.0], [23.0, 589.0], [26.0, 870.0], [27.0, 905.0], [30.0, 776.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 86.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.75, "minX": 1.74887436E12, "maxY": 58.75, "series": [{"data": [[1.74887436E12, 0.75], [1.74887442E12, 58.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74887442E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.74887436E12, "maxY": 58.86666666666667, "series": [{"data": [[1.74887436E12, 0.6333333333333333], [1.74887442E12, 58.86666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74887442E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.74887436E12, "maxY": 14.95, "series": [{"data": [[1.74887436E12, 0.11666666666666667], [1.74887442E12, 14.55]], "isOverall": false, "label": "CheckOut-success", "isController": false}, {"data": [[1.74887436E12, 0.21666666666666667], [1.74887442E12, 14.95]], "isOverall": false, "label": "Home Page-success", "isController": false}, {"data": [[1.74887436E12, 0.18333333333333332], [1.74887442E12, 14.65]], "isOverall": false, "label": "View Cart-success", "isController": false}, {"data": [[1.74887436E12, 0.11666666666666667], [1.74887442E12, 14.716666666666667]], "isOverall": false, "label": "Add to Cart-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74887442E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.74887436E12, "maxY": 58.86666666666667, "series": [{"data": [[1.74887436E12, 0.6333333333333333], [1.74887442E12, 58.86666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74887442E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

